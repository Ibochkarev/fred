{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is Fred? Fred is a visual drag-and-drop fr ont-end ed itor for MODX CMS . It empowers ordinary people to create exceptional content without knowing how to code or learning complex interfaces. You can create content with Fred by merely dragging Elements from a sidebar and dropping them where you wish for them to appear. Select the copy you wish to change or click an image you want to update, edit directly in your browser, and click a green checkmark to save the changes. What does Fred do for developers and site builders? Fred helps theme builders break into the MODX ecosystem. It is easy to port existing themes to Fred and export them ready for the MODX Extras . Fred offers existing MODX developers an option to create more flexible and intuitive experiences for their site owners. Fred can power designs that would otherwise require dozens of TVs, a complex Manager UI, or tricky Manager customization. Fred brings content creators familiar visual controls like sliders, toggles and color pickers. Further, these controls can pass parameters to MODX Snippets and its API for a bulletproof and powerful content creation solution. In short, Fred makes constructing complex pages simple for even the most non-technical users. How is Fred different from other visual content builders? Fred adheres to MODX\u2019s core tenet of Creative Freedom. It doesn\u2019t force you into someone else\u2019s preferred front-end framework or way of building things. If you can imagine or prototype it, Fred can power it\u2014without compromise. Developers and designers can realize pixel-perfect websites and confidently turn over content creation duties without fear of things breaking. So whether a site is made by customizing a free starter theme, or handcrafted 100% from scratch, Fred can help everyone build websites faster, more consistently and with better results. What Else Can Fred Do? The following is a sample of Fred\u2019s capabilities that make it a compelling visual content building platform: Transform static Design Libraries into a live content creating tool that strictly adheres to brand standards, and that is easily understood and used by non-technical team members across your entire organization Use optional conditional/looping Twig template logic to create robust Elements limited only by your imagination Create and organize collections of Elements as building blocks for pages Blueprints provide \u201creplace the placeholders\u201d full- or partial-page templates Multiple dropzones for complete control of every page layout Configure content using a variety of controls including toggles, text inputs, date pickers, select inputs, sliders, Resource pickers, and color pickers Supports MODX code Snippets with live Ajax rendering of changes Visual Font Awesome 5 icon picker\u2014developers can create other icon pickers, too Simple content formatting with a curated default TinyMCE rich text editor Rearrange and re-order page content via drag-and-drop Quickly duplicate existing Elements to build up galleries and sliders Fred content renders down to cachable output for blazing-fast page speed Complete set of production-ready Bootstrap 4 Elements to slash the time needed for theme builders to get started","title":"What is Fred?"},{"location":"#what-is-fred","text":"Fred is a visual drag-and-drop fr ont-end ed itor for MODX CMS . It empowers ordinary people to create exceptional content without knowing how to code or learning complex interfaces. You can create content with Fred by merely dragging Elements from a sidebar and dropping them where you wish for them to appear. Select the copy you wish to change or click an image you want to update, edit directly in your browser, and click a green checkmark to save the changes.","title":"What is Fred?"},{"location":"#what-does-fred-do-for-developers-and-site-builders","text":"Fred helps theme builders break into the MODX ecosystem. It is easy to port existing themes to Fred and export them ready for the MODX Extras . Fred offers existing MODX developers an option to create more flexible and intuitive experiences for their site owners. Fred can power designs that would otherwise require dozens of TVs, a complex Manager UI, or tricky Manager customization. Fred brings content creators familiar visual controls like sliders, toggles and color pickers. Further, these controls can pass parameters to MODX Snippets and its API for a bulletproof and powerful content creation solution. In short, Fred makes constructing complex pages simple for even the most non-technical users.","title":"What does Fred do for developers and site builders?"},{"location":"#how-is-fred-different-from-other-visual-content-builders","text":"Fred adheres to MODX\u2019s core tenet of Creative Freedom. It doesn\u2019t force you into someone else\u2019s preferred front-end framework or way of building things. If you can imagine or prototype it, Fred can power it\u2014without compromise. Developers and designers can realize pixel-perfect websites and confidently turn over content creation duties without fear of things breaking. So whether a site is made by customizing a free starter theme, or handcrafted 100% from scratch, Fred can help everyone build websites faster, more consistently and with better results.","title":"How is Fred different from other visual content builders?"},{"location":"#what-else-can-fred-do","text":"The following is a sample of Fred\u2019s capabilities that make it a compelling visual content building platform: Transform static Design Libraries into a live content creating tool that strictly adheres to brand standards, and that is easily understood and used by non-technical team members across your entire organization Use optional conditional/looping Twig template logic to create robust Elements limited only by your imagination Create and organize collections of Elements as building blocks for pages Blueprints provide \u201creplace the placeholders\u201d full- or partial-page templates Multiple dropzones for complete control of every page layout Configure content using a variety of controls including toggles, text inputs, date pickers, select inputs, sliders, Resource pickers, and color pickers Supports MODX code Snippets with live Ajax rendering of changes Visual Font Awesome 5 icon picker\u2014developers can create other icon pickers, too Simple content formatting with a curated default TinyMCE rich text editor Rearrange and re-order page content via drag-and-drop Quickly duplicate existing Elements to build up galleries and sliders Fred content renders down to cachable output for blazing-fast page speed Complete set of production-ready Bootstrap 4 Elements to slash the time needed for theme builders to get started","title":"What Else Can Fred Do?"},{"location":"blueprints/","text":"Blueprints Blueprints are pre-designed content sections or even full pages of content. These can be used as starting points for structured content like landing pages, product pages, etc. Blueprints function as a \u201creplace the placeholders\u201d way to create content. They are a collection of one or more Elements with sample content and images in place. You can also use Blueprints as demo pages which theme users can use to start a site with complete layouts made up of any combination of content and Elements. Blueprints are organized into user-determined categories such as Headers, Landing Pages, Galleries, etc. Using Blueprints Like Elements, find a Blueprint you wish to use and drag-and-drop it into a Dropzone on a Fred-enabled page. Creating Blueprints Users with permissions to do so can save Blueprints and share them with others or keep them private so only their users can see them. Blueprint Screenshots When creating a Blueprint, it will generate a screenshot image for you. However, you may wish to manually create your own screenshot as the libary used to build screen captures does not understand all CSS properties. Full-page Blueprints Complete Blueprints are a copy of an entire page of content. You create these from the front-end when Fred is enabled. To create a complete Blueprint, click the Blueprints icon in the Fred sidebar, then choose an existing category from the top or create a new category for your Blueprints. Give your Blueprint a name and save Partial Blueprints Partial Blueprints are made from the overlapping, rounded-corner squares icon that appears when hovering/focusing an Element in the front-end. Click this Blueprint icon, choose a category, give it a name, and save.","title":"Blueprints"},{"location":"blueprints/#blueprints","text":"Blueprints are pre-designed content sections or even full pages of content. These can be used as starting points for structured content like landing pages, product pages, etc. Blueprints function as a \u201creplace the placeholders\u201d way to create content. They are a collection of one or more Elements with sample content and images in place. You can also use Blueprints as demo pages which theme users can use to start a site with complete layouts made up of any combination of content and Elements. Blueprints are organized into user-determined categories such as Headers, Landing Pages, Galleries, etc.","title":"Blueprints"},{"location":"blueprints/#using-blueprints","text":"Like Elements, find a Blueprint you wish to use and drag-and-drop it into a Dropzone on a Fred-enabled page.","title":"Using Blueprints"},{"location":"blueprints/#creating-blueprints","text":"Users with permissions to do so can save Blueprints and share them with others or keep them private so only their users can see them.","title":"Creating Blueprints"},{"location":"blueprints/#blueprint-screenshots","text":"When creating a Blueprint, it will generate a screenshot image for you. However, you may wish to manually create your own screenshot as the libary used to build screen captures does not understand all CSS properties.","title":"Blueprint Screenshots"},{"location":"blueprints/#full-page-blueprints","text":"Complete Blueprints are a copy of an entire page of content. You create these from the front-end when Fred is enabled. To create a complete Blueprint, click the Blueprints icon in the Fred sidebar, then choose an existing category from the top or create a new category for your Blueprints. Give your Blueprint a name and save","title":"Full-page Blueprints"},{"location":"blueprints/#partial-blueprints","text":"Partial Blueprints are made from the overlapping, rounded-corner squares icon that appears when hovering/focusing an Element in the front-end. Click this Blueprint icon, choose a category, give it a name, and save.","title":"Partial Blueprints"},{"location":"elements/","text":"Elements Fred Elements are the basic building blocks used by end-users to create content. They can be as simple as a single headline or paragraph, or more complex like a hero intro with configurable background images, text padding, opacity settings and more. Organized by Categories Elements can be organized to aid content creators in finding different types of content. For example, a Theme might contain the following Element Categories: Text Intros Quotes Code Blocks Galleries Creating Fred Elements To learn more about creating Template for Fred, see the developer documentation .","title":"Elements"},{"location":"elements/#elements","text":"Fred Elements are the basic building blocks used by end-users to create content. They can be as simple as a single headline or paragraph, or more complex like a hero intro with configurable background images, text padding, opacity settings and more.","title":"Elements"},{"location":"elements/#organized-by-categories","text":"Elements can be organized to aid content creators in finding different types of content. For example, a Theme might contain the following Element Categories: Text Intros Quotes Code Blocks Galleries","title":"Organized by Categories"},{"location":"elements/#creating-fred-elements","text":"To learn more about creating Template for Fred, see the developer documentation .","title":"Creating Fred Elements"},{"location":"getting_started/","text":"Getting Started The easiest way to start with Fred is installing a Theme created for Fred. Pick and install a Theme from the MODX Extras repository into your MODX website. Add a new page to your site. Choose one of the Templates from the Theme and save the Page. Click the Preview button to visit this page from the front-end to start building with Fred. If you\u2019re interested in creating Themes from scratch, please see the Theme Creation Tutorial .","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"The easiest way to start with Fred is installing a Theme created for Fred. Pick and install a Theme from the MODX Extras repository into your MODX website. Add a new page to your site. Choose one of the Templates from the Theme and save the Page. Click the Preview button to visit this page from the front-end to start building with Fred. If you\u2019re interested in creating Themes from scratch, please see the Theme Creation Tutorial .","title":"Getting Started"},{"location":"templates/","text":"MODX Templates Fred Fred only loads on Pages which use MODX Templates that are assigned to a Fred Theme. These are identified in the Manager by visiting the Extras menu Fred Themes top tab Themed Templates sidebar. Any pages that use a Template listed in this table will block access to the content area in the Manager and will load Fred on the front-end when logged in for editing. Dropzones Most templates will have a content Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you may need. Dropzones are where you drag-and-drop Elements and Blueprints from the Fred sidebar. Creating Fred Templates To learn more about creating Template for Fred, see the developer documentation .","title":"MODX Templates & Fred"},{"location":"templates/#modx-templates-fred","text":"Fred only loads on Pages which use MODX Templates that are assigned to a Fred Theme. These are identified in the Manager by visiting the Extras menu Fred Themes top tab Themed Templates sidebar. Any pages that use a Template listed in this table will block access to the content area in the Manager and will load Fred on the front-end when logged in for editing.","title":"MODX Templates &amp; Fred"},{"location":"templates/#dropzones","text":"Most templates will have a content Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you may need. Dropzones are where you drag-and-drop Elements and Blueprints from the Fred sidebar.","title":"Dropzones"},{"location":"templates/#creating-fred-templates","text":"To learn more about creating Template for Fred, see the developer documentation .","title":"Creating Fred Templates"},{"location":"develop/","text":"Developing for Fred Fred developers should have a basic understand of MODX, be proficient with HTML/CSS markup for creating Elements, and be able to create valid JSON for Option Sets. Intermediate Fred developers will use Twig to create conditional logic in Elements. This can be used to show or hide things based on the settings of the controls in Option Sets. Advanced Fred developers will need to know Javascript and PHP to create Fred Plugins . Suggested Workflow The easiest way to familiarize yourself with developing for Fred is to install a Theme, duplicate it, then edit and add to the copy to see how things work. We strongly suggest installing the Ace Extra as it gives you a nice code editor interface including warning of invalid JSON and code hints when creating Elements in the Manager. Code Hinting in Fred As mentioned above, Fred will offer attribute-completion and code hints when working in the Manager: todo @theboxer (including screenshots and how to trigger it, dagnabbit!)","title":"About Developing for Fred"},{"location":"develop/#developing-for-fred","text":"Fred developers should have a basic understand of MODX, be proficient with HTML/CSS markup for creating Elements, and be able to create valid JSON for Option Sets. Intermediate Fred developers will use Twig to create conditional logic in Elements. This can be used to show or hide things based on the settings of the controls in Option Sets. Advanced Fred developers will need to know Javascript and PHP to create Fred Plugins .","title":"Developing for Fred"},{"location":"develop/#suggested-workflow","text":"The easiest way to familiarize yourself with developing for Fred is to install a Theme, duplicate it, then edit and add to the copy to see how things work. We strongly suggest installing the Ace Extra as it gives you a nice code editor interface including warning of invalid JSON and code hints when creating Elements in the Manager.","title":"Suggested Workflow"},{"location":"develop/#code-hinting-in-fred","text":"As mentioned above, Fred will offer attribute-completion and code hints when working in the Manager: todo @theboxer (including screenshots and how to trigger it, dagnabbit!)","title":"Code Hinting in Fred"},{"location":"develop/convert-to-fred/","text":"Convert an Existing MODX Site to Fred todo @matdave","title":"Convert Exisitng Sites to Fred"},{"location":"develop/convert-to-fred/#convert-an-existing-modx-site-to-fred","text":"todo @matdave","title":"Convert an Existing MODX Site to Fred"},{"location":"develop/themes/","text":"Theme Creation Tutorial Once you have created a design you are happy with, it is straightforward to build a Theme to share. To start creating a theme, follow the steps below: Install Fred from MODX.com , the icon picker and TinyMCE RTE Set up a MODX Template with a content Dropzone Assign this Template to a Fred Theme Create Categories for your Fred Elements Create Fred Elements Step 1: Install Fred Fred is available as a transport package. In your MODX installation, go to Extras Installer and click on the Download Extras button. Search to find bring up Fred. You should also see other Extras listed made for Fred, such as a Font Awesome icon picker and a TinyMCE RTE. If you decide to add these also, follow their setup instructions. After your Fred Extras finish downloading, install them from the Packages grid. Step 2: Set up a Template Fred needs a \u201cdropzone\u201d to know where content can go, indicated by adding a data-fred-dropzone attribute to an HTML entity, often a div tag. For example, where the [[*content]] tag would normally be in a Template, add the following: div data-fred-dropzone=\"content\" [[*content]] /div Note the value of the data-fred-dropzone=\"content\" attribute indicates where to render your content once you save a page in Fred, in this case, the [[*content]] . Fred also supports multiple Dropzones; see the templates documentation for more information. Step 3: Assign a Template to a Fred Theme In the MODX Manager, go to the Extras menu Fred Themes tab and switch to Themed Templates sidebar Click the Assign Theme to a Template button Select all Templates you wish to use with this Fred Theme Select the Default Theme Click the Save button In the Manager, Resources that use Templates assigned to a Fred Theme should have an \"Open in Fred\" button. From the front-end, you should see either three icons which launch Fred at the bottom-left of the page or a Fred sidebar. Step 4: Create Categories for Elements Fred organizes Elements using categories. Open the Elements Manager Page from the Extras Fred Elements menu, and switch to the Categories tab to create Categories. For example, your categories could look like this: Page Content Intros Images Testimonials \u2026 Fred requires at least one Category before creating actual content Element. Step 5: Create your first Elements Fred Elements can be as simple as raw text or more complex like a responsive product catalog detail page. Let\u2019s start by creating a simple heading Element, often the first thing on a page. Switch to the Elements tab in Element\u2019s CMP ( Extras Fred Elements ) and click the Create Element button. Fill the name ( H1 Heading ), category ( Text ), image ( https://placehold.it/300x150 text=Heading ). Add the following markup: h1 data-fred-name=\"heading\" Hello, world. /h1 Save this Element, go back to the front-end of your Resource, and refresh the page. Click on the orange Elements stacked boxes icon or the MODX icon in the launcher at the bottom left of the page. In the sidebar Elements tab, you should now see the categories you created earlier in step 4. Hover the Text category to see your freshly created H1 Heading Element and drag it into the empty dropzone. Congratulations, you just added your first Element to a page using Fred! Select the placeholder \u201cHello, world.\u201d text and start typing to edit its content. When hovering over an Element, you\u2019ll see an additional toolbar that lets you duplicate, delete, or move the Element on your page. When you\u2019re happy with the new page title, click the green checkbox button to save. Let\u2019s create another Element for a single paragraph: Create an Element under same category with the name Basic Paragraph , https://placehold.it/300x150 text=Paragraph for the image, and p data-fred-name=\"paragraph\" Your content goes here. /p for the markup Save this in the Manager From the front-end, reload the page Drag this new Element beneath the previously created title, and drop it in place Change the text and save Exporting a Theme The Fred Manager Extra (aka, 3rd-party Component or 3PC) allows you share your themes with colleagues or to submit it to the MODX Extras repository: Click on the Themes tab. Find the Theme you\u2019d like to share/publish. Right-click on its name and choose the Build theme option. Fill in the details and choose one of the two export options at the bottom. A MODX Installer-ready theme will be saved to your core/packages/ directory as {{theme-name}}.transport.zip file that you can distribute. You can also choose to build and download, which will also save a copy to your downloads directory on your local computer.","title":"Theme Creation Tutorial"},{"location":"develop/themes/#theme-creation-tutorial","text":"Once you have created a design you are happy with, it is straightforward to build a Theme to share. To start creating a theme, follow the steps below: Install Fred from MODX.com , the icon picker and TinyMCE RTE Set up a MODX Template with a content Dropzone Assign this Template to a Fred Theme Create Categories for your Fred Elements Create Fred Elements","title":"Theme Creation Tutorial"},{"location":"develop/themes/#step-1-install-fred","text":"Fred is available as a transport package. In your MODX installation, go to Extras Installer and click on the Download Extras button. Search to find bring up Fred. You should also see other Extras listed made for Fred, such as a Font Awesome icon picker and a TinyMCE RTE. If you decide to add these also, follow their setup instructions. After your Fred Extras finish downloading, install them from the Packages grid.","title":"Step 1: Install Fred"},{"location":"develop/themes/#step-2-set-up-a-template","text":"Fred needs a \u201cdropzone\u201d to know where content can go, indicated by adding a data-fred-dropzone attribute to an HTML entity, often a div tag. For example, where the [[*content]] tag would normally be in a Template, add the following: div data-fred-dropzone=\"content\" [[*content]] /div Note the value of the data-fred-dropzone=\"content\" attribute indicates where to render your content once you save a page in Fred, in this case, the [[*content]] . Fred also supports multiple Dropzones; see the templates documentation for more information.","title":"Step 2: Set up a Template"},{"location":"develop/themes/#step-3-assign-a-template-to-a-fred-theme","text":"In the MODX Manager, go to the Extras menu Fred Themes tab and switch to Themed Templates sidebar Click the Assign Theme to a Template button Select all Templates you wish to use with this Fred Theme Select the Default Theme Click the Save button In the Manager, Resources that use Templates assigned to a Fred Theme should have an \"Open in Fred\" button. From the front-end, you should see either three icons which launch Fred at the bottom-left of the page or a Fred sidebar.","title":"Step 3: Assign a Template to a Fred Theme"},{"location":"develop/themes/#step-4-create-categories-for-elements","text":"Fred organizes Elements using categories. Open the Elements Manager Page from the Extras Fred Elements menu, and switch to the Categories tab to create Categories. For example, your categories could look like this: Page Content Intros Images Testimonials \u2026 Fred requires at least one Category before creating actual content Element.","title":"Step 4: Create Categories for Elements"},{"location":"develop/themes/#step-5-create-your-first-elements","text":"Fred Elements can be as simple as raw text or more complex like a responsive product catalog detail page. Let\u2019s start by creating a simple heading Element, often the first thing on a page. Switch to the Elements tab in Element\u2019s CMP ( Extras Fred Elements ) and click the Create Element button. Fill the name ( H1 Heading ), category ( Text ), image ( https://placehold.it/300x150 text=Heading ). Add the following markup: h1 data-fred-name=\"heading\" Hello, world. /h1 Save this Element, go back to the front-end of your Resource, and refresh the page. Click on the orange Elements stacked boxes icon or the MODX icon in the launcher at the bottom left of the page. In the sidebar Elements tab, you should now see the categories you created earlier in step 4. Hover the Text category to see your freshly created H1 Heading Element and drag it into the empty dropzone. Congratulations, you just added your first Element to a page using Fred! Select the placeholder \u201cHello, world.\u201d text and start typing to edit its content. When hovering over an Element, you\u2019ll see an additional toolbar that lets you duplicate, delete, or move the Element on your page. When you\u2019re happy with the new page title, click the green checkbox button to save. Let\u2019s create another Element for a single paragraph: Create an Element under same category with the name Basic Paragraph , https://placehold.it/300x150 text=Paragraph for the image, and p data-fred-name=\"paragraph\" Your content goes here. /p for the markup Save this in the Manager From the front-end, reload the page Drag this new Element beneath the previously created title, and drop it in place Change the text and save","title":"Step 5: Create your first Elements"},{"location":"develop/themes/#exporting-a-theme","text":"The Fred Manager Extra (aka, 3rd-party Component or 3PC) allows you share your themes with colleagues or to submit it to the MODX Extras repository: Click on the Themes tab. Find the Theme you\u2019d like to share/publish. Right-click on its name and choose the Build theme option. Fill in the details and choose one of the two export options at the bottom. A MODX Installer-ready theme will be saved to your core/packages/ directory as {{theme-name}}.transport.zip file that you can distribute. You can also choose to build and download, which will also save a copy to your downloads directory on your local computer.","title":"Exporting a Theme"},{"location":"develop/acls/howto/","text":"Permissions in Fred When installing Fred the first time, it adds a Fred Admin policy to all contexts for the Administrators User Group. This policy enables any member with a Super User Role full access to Fred both in the Manager and in all front-end Contexts. It also creates a more-limited Fred Editor policy intended for users that do not need to set up Fred. Setting up Fred involves creating new Elements, Option Sets, and other admin functions. Limiting Fred to Specific Contexts By default, the Fred Admin policy applies to all existing Contexts. If you do not need to manage all Contexts with Fred remove this Policy from the Administrators User Group; if you create a new Context that needs to be managed by Fred add this policy to the Administrators Group after creating the Context. To enable Fred for members who are not Administrators Group members, add a Fred Policy to their User Group and to the specific Contexts you wish to be managed by Fred. Manager and Front-end Access Web developers and theme creators use the Fred Extra in the Manager to configure Fred and create Themes. Once a site is set up, however, daily content creation and edits using Fred may not require Manager access. If you wish for users to only work with Fred from the front-end, you need to take two steps: Install the Login Extra to add a front-end login for content authors and editors. Assign one of the Fred Policies to the web or other Contexts. Creating Custom Fred Policies The built-in Fred Policies may not be sufficient for all sites. Fortunately, creating custom Fred Policies is straightforward. In the Manager, select the ACLs menu under the gear icon in the upper right. Click the Access Policies tab. Click the Create Access Policy button, fill the policy name and select Fred as the Policy Template. This Policy Template contains all the possible permissions you need to customize how you configure it for your users. When you save the policy, it appears in the table. Right-click it and select Update Policy from the contextual menu. Enable or disable the permissions by unchecking the ones you wish to restrict from your users.","title":"How To"},{"location":"develop/acls/howto/#permissions-in-fred","text":"When installing Fred the first time, it adds a Fred Admin policy to all contexts for the Administrators User Group. This policy enables any member with a Super User Role full access to Fred both in the Manager and in all front-end Contexts. It also creates a more-limited Fred Editor policy intended for users that do not need to set up Fred. Setting up Fred involves creating new Elements, Option Sets, and other admin functions.","title":"Permissions in Fred"},{"location":"develop/acls/howto/#limiting-fred-to-specific-contexts","text":"By default, the Fred Admin policy applies to all existing Contexts. If you do not need to manage all Contexts with Fred remove this Policy from the Administrators User Group; if you create a new Context that needs to be managed by Fred add this policy to the Administrators Group after creating the Context. To enable Fred for members who are not Administrators Group members, add a Fred Policy to their User Group and to the specific Contexts you wish to be managed by Fred.","title":"Limiting Fred to Specific Contexts"},{"location":"develop/acls/howto/#manager-and-front-end-access","text":"Web developers and theme creators use the Fred Extra in the Manager to configure Fred and create Themes. Once a site is set up, however, daily content creation and edits using Fred may not require Manager access. If you wish for users to only work with Fred from the front-end, you need to take two steps: Install the Login Extra to add a front-end login for content authors and editors. Assign one of the Fred Policies to the web or other Contexts.","title":"Manager and Front-end Access"},{"location":"develop/acls/howto/#creating-custom-fred-policies","text":"The built-in Fred Policies may not be sufficient for all sites. Fortunately, creating custom Fred Policies is straightforward. In the Manager, select the ACLs menu under the gear icon in the upper right. Click the Access Policies tab. Click the Create Access Policy button, fill the policy name and select Fred as the Policy Template. This Policy Template contains all the possible permissions you need to customize how you configure it for your users. When you save the policy, it appears in the table. Right-click it and select Update Policy from the contextual menu. Enable or disable the permissions by unchecking the ones you wish to restrict from your users.","title":"Creating Custom Fred Policies"},{"location":"develop/acls/permissions/","text":"Permissions The following sections list the permissions available for Fred. The subhead is the permission key used in code, followed by a brief description of where and what those permissions control Most of these permissions can be used both with the mgr context and front-end contexts like web . However there are few that only apply to mgr or front-end contexts. For example, if you apply the fred permission to the mgr Context, users will see the Fred Extra in the Manager. If you apply it to a front-end context, the Fred controls will apear when browsing the site from the front-end (if assigned to a page\u2019s Template). Applying the fred_settings permission to mgr context will do nothing as this permission is only used in front-end to be able to see the Settings tab in the sidebar menu. General Permissions fred View Fred (mgr) (web) fred_settings View the Settings menu in the sidebar (web) fred_settings_advanced View the Advanced Settings under the Settings menu (web) fred_settings_tvs View the TVs section under the Settings menu (web) fred_settings_tags View the Tags section under the Settings menu (web) fred_media_sources View Media Sources (mgr) Element Permissions fred_elements View Elements (mgr) (web) fred_element_save Create/edit/duplicate Elements (mgr) fred_element_delete Delete Elements (mgr) fred_element_screenshot Take a screenshot to replace the current sidebar preview for Elements (web) fred_element_move Drag and drop Elements into drop zones (web) fred_element_rebuild View the Rebuild tab (mgr) Element Category Permissions fred_element_categories View Fred Element Categories (mgr) fred_element_category_save Create/edit/duplicate Element (mgr) fred_element_category_delete Delete Element Categories (mgr) RTE Config Permissions fred_element_rtes View RTE configs (mgr) fred_element_rte_config_save Create/edit/duplicate RTE configs (mgr) fred_element_rte_config_delete Delete RTE configs (mgr) Option Sets Permissions fred_element_option_sets View Option Sets (mgr) fred_element_option_sets_save Create/edit/duplicate Option Sets (mgr) fred_element_option_sets_delete Delete Option Sets (mgr) Blueprints Permissions fred_blueprints View Blueprints (mgr) (web) fred_blueprints_save Create/edit/duplicate Blueprints (mgr) (web) fred_blueprints_delete Delete Blueprints (mgr) fred_blueprints_create_public Create public Blueprints (mgr) (web) Blueprint Category Permissions fred_blueprint_categories View Blueprint Categories (mgr) fred_blueprint_categories_save Create/edit/duplicate Blueprint Categories (mgr) (web) fred_blueprint_categories_delete Delete Blueprint Categories (mgr) fred_blueprint_categories_create_public Create Public Blueprint Categories (mgr) (web) Theme Permissions fred_themes View the Themes tab (mgr) fred_themes_save Create/edit/duplicate Themes (mgr) fred_themes_delete Delete Themes (mgr) fred_themes_build Build Themes (mgr) Themed Template Permissions fred_themed_templates View Theme/Template assignments (mgr) fred_themed_templates_save Assign/Update Fred Themes to MODX Templates (mgr) fred_themed_templates_delete Unassign Theme from MODX Templates (mgr) MODX Permissions new_document Create new Resources (mgr) (web) new_document_in_root Create Resources in the top-level of web root (mgr) (web) save_document Save Resources (mgr) (web) view_unpublished View unpublished Resources (web) resource_duplicate Duplicate Resources (mgr) (web) publish_document Publish Resources (mgr) (web) unpublish_document Unpublish Resources (mgr) (web) delete_document Delete Resources (mgr) (web) undelete_document Undelete Resources (mgr) (web)","title":"Permissions"},{"location":"develop/acls/permissions/#permissions","text":"The following sections list the permissions available for Fred. The subhead is the permission key used in code, followed by a brief description of where and what those permissions control Most of these permissions can be used both with the mgr context and front-end contexts like web . However there are few that only apply to mgr or front-end contexts. For example, if you apply the fred permission to the mgr Context, users will see the Fred Extra in the Manager. If you apply it to a front-end context, the Fred controls will apear when browsing the site from the front-end (if assigned to a page\u2019s Template). Applying the fred_settings permission to mgr context will do nothing as this permission is only used in front-end to be able to see the Settings tab in the sidebar menu.","title":"Permissions"},{"location":"develop/acls/permissions/#general-permissions","text":"","title":"General Permissions"},{"location":"develop/acls/permissions/#fred","text":"View Fred (mgr) (web)","title":"fred"},{"location":"develop/acls/permissions/#fred_settings","text":"View the Settings menu in the sidebar (web)","title":"fred_settings"},{"location":"develop/acls/permissions/#fred_settings_advanced","text":"View the Advanced Settings under the Settings menu (web)","title":"fred_settings_advanced"},{"location":"develop/acls/permissions/#fred_settings_tvs","text":"View the TVs section under the Settings menu (web)","title":"fred_settings_tvs"},{"location":"develop/acls/permissions/#fred_settings_tags","text":"View the Tags section under the Settings menu (web)","title":"fred_settings_tags"},{"location":"develop/acls/permissions/#fred_media_sources","text":"View Media Sources (mgr)","title":"fred_media_sources"},{"location":"develop/acls/permissions/#element-permissions","text":"","title":"Element Permissions"},{"location":"develop/acls/permissions/#fred_elements","text":"View Elements (mgr) (web)","title":"fred_elements"},{"location":"develop/acls/permissions/#fred_element_save","text":"Create/edit/duplicate Elements (mgr)","title":"fred_element_save"},{"location":"develop/acls/permissions/#fred_element_delete","text":"Delete Elements (mgr)","title":"fred_element_delete"},{"location":"develop/acls/permissions/#fred_element_screenshot","text":"Take a screenshot to replace the current sidebar preview for Elements (web)","title":"fred_element_screenshot"},{"location":"develop/acls/permissions/#fred_element_move","text":"Drag and drop Elements into drop zones (web)","title":"fred_element_move"},{"location":"develop/acls/permissions/#fred_element_rebuild","text":"View the Rebuild tab (mgr)","title":"fred_element_rebuild"},{"location":"develop/acls/permissions/#element-category-permissions","text":"","title":"Element Category Permissions"},{"location":"develop/acls/permissions/#fred_element_categories","text":"View Fred Element Categories (mgr)","title":"fred_element_categories"},{"location":"develop/acls/permissions/#fred_element_category_save","text":"Create/edit/duplicate Element (mgr)","title":"fred_element_category_save"},{"location":"develop/acls/permissions/#fred_element_category_delete","text":"Delete Element Categories (mgr)","title":"fred_element_category_delete"},{"location":"develop/acls/permissions/#rte-config-permissions","text":"","title":"RTE Config Permissions"},{"location":"develop/acls/permissions/#fred_element_rtes","text":"View RTE configs (mgr)","title":"fred_element_rtes"},{"location":"develop/acls/permissions/#fred_element_rte_config_save","text":"Create/edit/duplicate RTE configs (mgr)","title":"fred_element_rte_config_save"},{"location":"develop/acls/permissions/#fred_element_rte_config_delete","text":"Delete RTE configs (mgr)","title":"fred_element_rte_config_delete"},{"location":"develop/acls/permissions/#option-sets-permissions","text":"","title":"Option Sets Permissions"},{"location":"develop/acls/permissions/#fred_element_option_sets","text":"View Option Sets (mgr)","title":"fred_element_option_sets"},{"location":"develop/acls/permissions/#fred_element_option_sets_save","text":"Create/edit/duplicate Option Sets (mgr)","title":"fred_element_option_sets_save"},{"location":"develop/acls/permissions/#fred_element_option_sets_delete","text":"Delete Option Sets (mgr)","title":"fred_element_option_sets_delete"},{"location":"develop/acls/permissions/#blueprints-permissions","text":"","title":"Blueprints Permissions"},{"location":"develop/acls/permissions/#fred_blueprints","text":"View Blueprints (mgr) (web)","title":"fred_blueprints"},{"location":"develop/acls/permissions/#fred_blueprints_save","text":"Create/edit/duplicate Blueprints (mgr) (web)","title":"fred_blueprints_save"},{"location":"develop/acls/permissions/#fred_blueprints_delete","text":"Delete Blueprints (mgr)","title":"fred_blueprints_delete"},{"location":"develop/acls/permissions/#fred_blueprints_create_public","text":"Create public Blueprints (mgr) (web)","title":"fred_blueprints_create_public"},{"location":"develop/acls/permissions/#blueprint-category-permissions","text":"","title":"Blueprint Category Permissions"},{"location":"develop/acls/permissions/#fred_blueprint_categories","text":"View Blueprint Categories (mgr)","title":"fred_blueprint_categories"},{"location":"develop/acls/permissions/#fred_blueprint_categories_save","text":"Create/edit/duplicate Blueprint Categories (mgr) (web)","title":"fred_blueprint_categories_save"},{"location":"develop/acls/permissions/#fred_blueprint_categories_delete","text":"Delete Blueprint Categories (mgr)","title":"fred_blueprint_categories_delete"},{"location":"develop/acls/permissions/#fred_blueprint_categories_create_public","text":"Create Public Blueprint Categories (mgr) (web)","title":"fred_blueprint_categories_create_public"},{"location":"develop/acls/permissions/#theme-permissions","text":"","title":"Theme Permissions"},{"location":"develop/acls/permissions/#fred_themes","text":"View the Themes tab (mgr)","title":"fred_themes"},{"location":"develop/acls/permissions/#fred_themes_save","text":"Create/edit/duplicate Themes (mgr)","title":"fred_themes_save"},{"location":"develop/acls/permissions/#fred_themes_delete","text":"Delete Themes (mgr)","title":"fred_themes_delete"},{"location":"develop/acls/permissions/#fred_themes_build","text":"Build Themes (mgr)","title":"fred_themes_build"},{"location":"develop/acls/permissions/#themed-template-permissions","text":"","title":"Themed Template Permissions"},{"location":"develop/acls/permissions/#fred_themed_templates","text":"View Theme/Template assignments (mgr)","title":"fred_themed_templates"},{"location":"develop/acls/permissions/#fred_themed_templates_save","text":"Assign/Update Fred Themes to MODX Templates (mgr)","title":"fred_themed_templates_save"},{"location":"develop/acls/permissions/#fred_themed_templates_delete","text":"Unassign Theme from MODX Templates (mgr)","title":"fred_themed_templates_delete"},{"location":"develop/acls/permissions/#modx-permissions","text":"","title":"MODX Permissions"},{"location":"develop/acls/permissions/#new_document","text":"Create new Resources (mgr) (web)","title":"new_document"},{"location":"develop/acls/permissions/#new_document_in_root","text":"Create Resources in the top-level of web root (mgr) (web)","title":"new_document_in_root"},{"location":"develop/acls/permissions/#save_document","text":"Save Resources (mgr) (web)","title":"save_document"},{"location":"develop/acls/permissions/#view_unpublished","text":"View unpublished Resources (web)","title":"view_unpublished"},{"location":"develop/acls/permissions/#resource_duplicate","text":"Duplicate Resources (mgr) (web)","title":"resource_duplicate"},{"location":"develop/acls/permissions/#publish_document","text":"Publish Resources (mgr) (web)","title":"publish_document"},{"location":"develop/acls/permissions/#unpublish_document","text":"Unpublish Resources (mgr) (web)","title":"unpublish_document"},{"location":"develop/acls/permissions/#delete_document","text":"Delete Resources (mgr) (web)","title":"delete_document"},{"location":"develop/acls/permissions/#undelete_document","text":"Undelete Resources (mgr) (web)","title":"undelete_document"},{"location":"develop/acls/policies/","text":"Default Policies Fred Admin This Admin policy has all permissions enabled. Users are not limited in any way when using Fred. Fred Editor A Fred Editor user is able to view Fred and all page settings in the front-end, create and use Elements and Blueprints and create new pages. The complete list of permissions for this Policy: fred fred_settings fred_settings_advanced fred_settings_tags fred_settings_tvs fred_elements fred_element_save fred_element_move fred_element_categories fred_element_category_save fred_blueprints fred_blueprints_save fred_blueprints_create_public fred_blueprint_categories fred_blueprint_categories_save fred_blueprint_categories_create_public fred_themed_templates new_document save_document resource_duplicate view_unpublished delete_document","title":"Default Policies"},{"location":"develop/acls/policies/#default-policies","text":"","title":"Default Policies"},{"location":"develop/acls/policies/#fred-admin","text":"This Admin policy has all permissions enabled. Users are not limited in any way when using Fred.","title":"Fred Admin"},{"location":"develop/acls/policies/#fred-editor","text":"A Fred Editor user is able to view Fred and all page settings in the front-end, create and use Elements and Blueprints and create new pages. The complete list of permissions for this Policy: fred fred_settings fred_settings_advanced fred_settings_tags fred_settings_tvs fred_elements fred_element_save fred_element_move fred_element_categories fred_element_category_save fred_blueprints fred_blueprints_save fred_blueprints_create_public fred_blueprint_categories fred_blueprint_categories_save fred_blueprint_categories_create_public fred_themed_templates new_document save_document resource_duplicate view_unpublished delete_document","title":"Fred Editor"},{"location":"develop/cmp/blueprint_categories/","text":"Blueprints Categories Categories help keep similar items organized. Examples could be: Intro Blocks Galleries Landing Pages Catalog Pages Form Pages Etc. Managing Blueprint Categories Blueprints can be managed from the Manager\u2019s Extras top menu Fred Blueprints tab Blueprint Categories sidebar section. Double-click a value you wish to edit, or click the gear icon to update the Blueprint Category in a modal. To remove a Blueprint Category, click the gear icon, or right-click on the row, and choose the Remove Category icon. WARNING: if you remove a category, all Blueprints attached to it will be removed also, potentially breaking sites.","title":"Blueprint Categories"},{"location":"develop/cmp/blueprint_categories/#blueprints-categories","text":"Categories help keep similar items organized. Examples could be: Intro Blocks Galleries Landing Pages Catalog Pages Form Pages Etc.","title":"Blueprints Categories"},{"location":"develop/cmp/blueprint_categories/#managing-blueprint-categories","text":"Blueprints can be managed from the Manager\u2019s Extras top menu Fred Blueprints tab Blueprint Categories sidebar section. Double-click a value you wish to edit, or click the gear icon to update the Blueprint Category in a modal. To remove a Blueprint Category, click the gear icon, or right-click on the row, and choose the Remove Category icon. WARNING: if you remove a category, all Blueprints attached to it will be removed also, potentially breaking sites.","title":"Managing Blueprint Categories"},{"location":"develop/cmp/blueprints/","text":"Blueprints Blueprints can only be created from the front-end . Theme developers can use Blueprints as sample pages which users in turn use to start building a site more quickly. Blueprints function as a \u201creplace the placeholders\u201d way to create content, comprised of one or more Elements with sample content and images in place. Managing Blueprints Blueprints can be managed from the Manager\u2019s Extras top menu Fred Blueprints tab Blueprints sidebar section. Right-click or click the gear icon to Quick Update the Blueprint in a modal, Update it the page itself, or Remove it to delete it from your Theme.","title":"Blueprints"},{"location":"develop/cmp/blueprints/#blueprints","text":"Blueprints can only be created from the front-end . Theme developers can use Blueprints as sample pages which users in turn use to start building a site more quickly. Blueprints function as a \u201creplace the placeholders\u201d way to create content, comprised of one or more Elements with sample content and images in place.","title":"Blueprints"},{"location":"develop/cmp/blueprints/#managing-blueprints","text":"Blueprints can be managed from the Manager\u2019s Extras top menu Fred Blueprints tab Blueprints sidebar section. Right-click or click the gear icon to Quick Update the Blueprint in a modal, Update it the page itself, or Remove it to delete it from your Theme.","title":"Managing Blueprints"},{"location":"develop/cmp/element_categories/","text":"Element Categories Categories are an organizational strucure for Fred to group items with similar usage. Examples Element categories could be: Headers Page Separators Intro Blocks Galleries Body copy Quotes Forms Etc. Under the Categories leftside tab on main Elements tab you can manage all Categories for Elements in Fred. Please note that if you remove a category, all Elements attached to it will be removed as well, which may break your site.","title":"Element Categories"},{"location":"develop/cmp/element_categories/#element-categories","text":"Categories are an organizational strucure for Fred to group items with similar usage. Examples Element categories could be: Headers Page Separators Intro Blocks Galleries Body copy Quotes Forms Etc. Under the Categories leftside tab on main Elements tab you can manage all Categories for Elements in Fred. Please note that if you remove a category, all Elements attached to it will be removed as well, which may break your site.","title":"Element Categories"},{"location":"develop/cmp/elements/","text":"Elements Elements are the fundamental starting point for Creating Element The following are the properties for each Element: Name - Required. What you wish to call the Element. Description - Optional. A brief description for the Element. Image - Required. If you do not specify an image, a default gray box with the Element name will be created for you. Images are used as the sources for dragging and dropping Elements into your Layouts. Category - Required. Which category to place this Element under. Rank - Optional. The order you wish this Element to show in its category. Markup - Optional. HTML + Twig markup for the Element, including Fred-specific attributes which allow you to control things like save targets, visibility when creating or viewing content, etc. Option Set - Optional. Complete Option Set can be selected here Options Override - Optional. Override selected Option Set, or define one time options for this Element Element images Element images are thumbnail previews used to drag-and-drop onto pages. You can create your own images/previews/screengrabs for Elements, or Fred can create ones for you in one of two ways: a gray box with the Element\u2019s name centered in the gray box (this is the default unless you provide an image) after an Element is used, and if you have the \"Take Screenshots\" permission, clicking the camera icon above the Element when focused. Note: the library used to take screenshots is very good, but it doesn\u2019t understand some CSS properties and may not render the screenshots optimially for your use case. For best results make sure that manual Element screenshots are 500px wide. Updating Elements Elements are like master templates which can be updated at any time. When an Element\u2019s markup or option set is updated, all places in a site should update to reflect these changes. To see the updated results, either resave the page, or use the \"Rebuild\" tab in the Fred 3PC.","title":"Elements"},{"location":"develop/cmp/elements/#elements","text":"Elements are the fundamental starting point for","title":"Elements"},{"location":"develop/cmp/elements/#creating-element","text":"The following are the properties for each Element: Name - Required. What you wish to call the Element. Description - Optional. A brief description for the Element. Image - Required. If you do not specify an image, a default gray box with the Element name will be created for you. Images are used as the sources for dragging and dropping Elements into your Layouts. Category - Required. Which category to place this Element under. Rank - Optional. The order you wish this Element to show in its category. Markup - Optional. HTML + Twig markup for the Element, including Fred-specific attributes which allow you to control things like save targets, visibility when creating or viewing content, etc. Option Set - Optional. Complete Option Set can be selected here Options Override - Optional. Override selected Option Set, or define one time options for this Element","title":"Creating Element"},{"location":"develop/cmp/elements/#element-images","text":"Element images are thumbnail previews used to drag-and-drop onto pages. You can create your own images/previews/screengrabs for Elements, or Fred can create ones for you in one of two ways: a gray box with the Element\u2019s name centered in the gray box (this is the default unless you provide an image) after an Element is used, and if you have the \"Take Screenshots\" permission, clicking the camera icon above the Element when focused. Note: the library used to take screenshots is very good, but it doesn\u2019t understand some CSS properties and may not render the screenshots optimially for your use case. For best results make sure that manual Element screenshots are 500px wide.","title":"Element images"},{"location":"develop/cmp/elements/#updating-elements","text":"Elements are like master templates which can be updated at any time. When an Element\u2019s markup or option set is updated, all places in a site should update to reflect these changes. To see the updated results, either resave the page, or use the \"Rebuild\" tab in the Fred 3PC.","title":"Updating Elements"},{"location":"develop/cmp/media_sources/","text":"","title":"Media Sources"},{"location":"develop/cmp/option_sets/","text":"Option Sets Option Sets allow you to create common configurations and frequently used sub-configs (e.g., color swatch pickers or a list of fonts) for use across multiple Elements. Creating Option Set The following are the avaialble Option Set properties: Name - Required, has to be unique Description - Optional Complete - Yes/No flag, if set to Yes, the Option Set will appear in select box when creating/updating Element. Setting it to No is usefull for partial Option Sets for import only purpose. Data - JSON with Element options","title":"Option Sets"},{"location":"develop/cmp/option_sets/#option-sets","text":"Option Sets allow you to create common configurations and frequently used sub-configs (e.g., color swatch pickers or a list of fonts) for use across multiple Elements.","title":"Option Sets"},{"location":"develop/cmp/option_sets/#creating-option-set","text":"The following are the avaialble Option Set properties: Name - Required, has to be unique Description - Optional Complete - Yes/No flag, if set to Yes, the Option Set will appear in select box when creating/updating Element. Setting it to No is usefull for partial Option Sets for import only purpose. Data - JSON with Element options","title":"Creating Option Set"},{"location":"develop/cmp/rebuild/","text":"Rebuild","title":"Rebuild"},{"location":"develop/cmp/rebuild/#rebuild","text":"","title":"Rebuild"},{"location":"develop/cmp/rte_configs/","text":"Rich Text Editor (RTE) Configs Under the RTE Configs tab you can manage all configuration sets for any installed RTEs. RTE configs must have a unique name, which is used in data-fred-rte-config attribute to determin which RTE to use, if any. Make sure RTE configs are valid JSON; you can use JSON Lint as an external service or the ACE editor MODX Extra which shows invalid JSON in the line-number columns as a white X in a red box. Default Configs If you create a config with a same name as your RTE, for example TinyMCE , this config will be used as a default one, overriding its defaults. To learn more about creating RTE configurations, and to see sample configurations for the TinyMCE for Fred Extra, see the RTE examples documentation. Overriding Default Configs Fred option sets can specify the RTE configuration to use for each Element. In addition, a data-fred-rte-config attribute on an HTML Element with a data-fred-name attribue (as long as contenteditable is not set to false) will override both the Default and option set specific settings.","title":"RTE Configs"},{"location":"develop/cmp/rte_configs/#rich-text-editor-rte-configs","text":"Under the RTE Configs tab you can manage all configuration sets for any installed RTEs. RTE configs must have a unique name, which is used in data-fred-rte-config attribute to determin which RTE to use, if any. Make sure RTE configs are valid JSON; you can use JSON Lint as an external service or the ACE editor MODX Extra which shows invalid JSON in the line-number columns as a white X in a red box.","title":"Rich Text Editor (RTE) Configs"},{"location":"develop/cmp/rte_configs/#default-configs","text":"If you create a config with a same name as your RTE, for example TinyMCE , this config will be used as a default one, overriding its defaults. To learn more about creating RTE configurations, and to see sample configurations for the TinyMCE for Fred Extra, see the RTE examples documentation.","title":"Default Configs"},{"location":"develop/cmp/rte_configs/#overriding-default-configs","text":"Fred option sets can specify the RTE configuration to use for each Element. In addition, a data-fred-rte-config attribute on an HTML Element with a data-fred-name attribue (as long as contenteditable is not set to false) will override both the Default and option set specific settings.","title":"Overriding Default Configs"},{"location":"develop/cmp/themed_templates/","text":"Themed Tempaltes Fred works by assigning Templates to Fred themes. If a page in a MODX site uses a template which is assigned to a Fred Theme, it will show Fred controls when working from the front-end and logged into the MODX Manager. A MODX Template can only be assigned to a single Fred Theme.","title":"Themed Templates"},{"location":"develop/cmp/themed_templates/#themed-tempaltes","text":"Fred works by assigning Templates to Fred themes. If a page in a MODX site uses a template which is assigned to a Fred Theme, it will show Fred controls when working from the front-end and logged into the MODX Manager. A MODX Template can only be assigned to a single Fred Theme.","title":"Themed Tempaltes"},{"location":"develop/cmp/themes/","text":"About Fred Themes While most users will typically only have a single theme, you can have many installed in a site. Themes include all the things needed to create a site except example pages (caveat: see Blueprints below). Being able to have multiple Themes allows Theme Builders to create and release a variety themes that share common options (Option sets) across Elements. What makes up a Theme Themes are made of of multple things: Elements Blueprints MODX Templates and any TVs assigned to them Categories Extras Assets License, Changelog and Readme files When you create a Theme, Fred will automatically create a directory named for the theme in assets/themes/{{theme-name}} . Use this to store all your theme-specific assets like images, css, fonts and javascript. Elements A Theme Builder will automatically include all Element Categories attached to the Theme with all their Elements . All Option Sets and RTE Configs attached to the Theme will be also included. Blueprints A Theme Builder will automatically include public Blueprint Categories attached to the THeme with all their public Blueprints . Templates and TVs A Theme Builder will include all MODX Templates assigned to the Theme. Any TVs assigned to those MODX Templates will also be included. Categories A User can select any root MODX Category to be included with the Theme. The Theme Builder will then include all child categories, snippets, chunks and plugins assigned to the root or child category. Extras Extras are MODX packages required for your theme to be fully functional. User will need to install all of the listed extras, before he can proceed with installing your Theme. Fred itself will always be a dependency and is included by default. Assets Theme-specific assets like CSS/SASS/SCSS, images, JS and other similar files are packed into each theme in the assets/theme/{{your-theme-name}} directory. License, Changelog and Readme Files These files show when you are installing the Extra from the MODX Package Manager. Build a Theme to Share The Fred Manager Extra (aka, 3rd-party Component or 3PC) allows you share your themes with colleagues or to submit it to the MODX Extras repository: Click on the Themes tab. Find the Theme you\u2019d like to share/publish. Right-click on its name and choose the Build theme option. Fill in the details and choose one of the two export options at the bottom. A MODX Installer-ready theme will be saved to your core/packages/ directory as {{theme-name}}.transport.zip file that you can distribute. You can also choose to build and download, which will also save a copy to your downloads directory on your local computer.","title":"Building Themes"},{"location":"develop/cmp/themes/#about-fred-themes","text":"While most users will typically only have a single theme, you can have many installed in a site. Themes include all the things needed to create a site except example pages (caveat: see Blueprints below). Being able to have multiple Themes allows Theme Builders to create and release a variety themes that share common options (Option sets) across Elements.","title":"About Fred Themes"},{"location":"develop/cmp/themes/#what-makes-up-a-theme","text":"Themes are made of of multple things: Elements Blueprints MODX Templates and any TVs assigned to them Categories Extras Assets License, Changelog and Readme files When you create a Theme, Fred will automatically create a directory named for the theme in assets/themes/{{theme-name}} . Use this to store all your theme-specific assets like images, css, fonts and javascript.","title":"What makes up a Theme"},{"location":"develop/cmp/themes/#elements","text":"A Theme Builder will automatically include all Element Categories attached to the Theme with all their Elements . All Option Sets and RTE Configs attached to the Theme will be also included.","title":"Elements"},{"location":"develop/cmp/themes/#blueprints","text":"A Theme Builder will automatically include public Blueprint Categories attached to the THeme with all their public Blueprints .","title":"Blueprints"},{"location":"develop/cmp/themes/#templates-and-tvs","text":"A Theme Builder will include all MODX Templates assigned to the Theme. Any TVs assigned to those MODX Templates will also be included.","title":"Templates and TVs"},{"location":"develop/cmp/themes/#categories","text":"A User can select any root MODX Category to be included with the Theme. The Theme Builder will then include all child categories, snippets, chunks and plugins assigned to the root or child category.","title":"Categories"},{"location":"develop/cmp/themes/#extras","text":"Extras are MODX packages required for your theme to be fully functional. User will need to install all of the listed extras, before he can proceed with installing your Theme. Fred itself will always be a dependency and is included by default.","title":"Extras"},{"location":"develop/cmp/themes/#assets","text":"Theme-specific assets like CSS/SASS/SCSS, images, JS and other similar files are packed into each theme in the assets/theme/{{your-theme-name}} directory.","title":"Assets"},{"location":"develop/cmp/themes/#license-changelog-and-readme-files","text":"These files show when you are installing the Extra from the MODX Package Manager.","title":"License, Changelog and Readme Files"},{"location":"develop/cmp/themes/#build-a-theme-to-share","text":"The Fred Manager Extra (aka, 3rd-party Component or 3PC) allows you share your themes with colleagues or to submit it to the MODX Extras repository: Click on the Themes tab. Find the Theme you\u2019d like to share/publish. Right-click on its name and choose the Build theme option. Fill in the details and choose one of the two export options at the bottom. A MODX Installer-ready theme will be saved to your core/packages/ directory as {{theme-name}}.transport.zip file that you can distribute. You can also choose to build and download, which will also save a copy to your downloads directory on your local computer.","title":"Build a Theme to Share"},{"location":"develop/elements/","text":"Elements Elements are the various design patterns used in a Theme. Elements usually include HTML markup and can be configured by using Settings for the Element accessed via the gear icon in the front-end. Elements can also include logic by using Twig in the markup to do things like show or hide certain things depending on the conditions you set in the Settings.","title":"Elements"},{"location":"develop/elements/#elements","text":"Elements are the various design patterns used in a Theme. Elements usually include HTML markup and can be configured by using Settings for the Element accessed via the gear icon in the front-end. Elements can also include logic by using Twig in the markup to do things like show or hide certain things depending on the conditions you set in the Settings.","title":"Elements"},{"location":"develop/elements/attributes/","text":"data-fred-\u2026 Attributes The following are the currently available attributes for Fred Elements. contenteditable When set to true the content of the HTML Element will be editable for end users, including any Elements nested within (for nested Dropzones). This attribute has to be used with data-fred-name to save the value. Example p data-fred-name= description Default value /p data-fred-name A unique (to this Element) name of the editable HTML Element. Only Elements with this attribute will be saved. By default, Elements with a data-fred-name attribute will automatically behave as if contentedtiable=\"true\" was explicitly declared. The value of this attribute has to be unique across in a single Element, but you can have multiple instances of an Element on the page. In addition, different Elements can share names. Examples !-- Simple editable paragraph -- p data-fred-name= description Default value /p !-- Editable image -- img src= http://via.placeholder.com/450x150 data-fred-name= header-image data-fred-attrs Defines other HTML attributes (comma separated) to save with the content of the HTML Element. Example img src= http://via.placeholder.com/450x150 alt= Default Alt data-fred-name= header-image data-fred-attrs= alt data-fred-render If set to false HTML Element won\u2019t appear when Fred is not loaded. This allows developers to create user-friendly, self-documenting Elements that inform users what they need to do in order to create content. Example p data-fred-render= false Add a *Link Location* setting for this Element to make the button appear. (This will be visible only when Fred is used to create content.) /p data-fred-target Defines Resource field to store content. Content of the HTML Element will be stored in regular Content field and additionally in the specified target. This attribute can\u2019t be used on a dropzone. Available targets: pagetitle longtitle description introtext menutitle alias template variables (text- or textarea-only) Example h1 data-fred-name= title data-fred-target= pagetitle Default Page Title /h1 data-fred-rte If set to true the Rich Text Editor will be loaded for the editable HTML Element. Example div data-fred-name= rte-content data-fred-rte= true Default Content /div data-fred-rte-config Specify RTE config that should be used for the Element. Example div data-fred-name= rte-content data-fred-rte= true data-fred-rte-config= simple Default Content /div data-fred-dropzone Defines a new Drop Zone for Fred Elements. This attribute cannot be empty and has to be unique across a single Element. You can create an unlimited number of Dropzones, though more than a few might get quite cumbersome. This is useful for creating alternate layouts like full width, split pages, sidebar pages, etc. Example div data-fred-dropzone= left class= left-content /div div data-fred-dropzone= right class= right-content /div data-fred-link-type Sets a type for a link, used for processing before generating content. Available values: page Used together with other data-fred-link- attributes. Example a href= fred.html data-fred-link-type= page data-fred-link-page= 2 Fred /a data-fred-link-page Defines ID of MODX Resource. Value of this attribute will be used as a link\u2019s href (in MODX format [[~ID]] ) when content is generated. Example a href= fred.html data-fred-link-type= page data-fred-link-page= 2 Fred /a data-fred-media-source This option override globals from Element Settings. Defines Media Source to be used for the Element. Name of the media source is expected and can accommodate multiple Names separated by comma , . Example img src= http://via.placeholder.com/450x150 data-fred-name= header-image data-fred-media-source= Assets,Images data-fred-image-media-source This option override globals from Element Settings and data-fred-media-source (but only for images). Defines Media Source to be used for the Element. Name of the media source is expected and can accommodate multiple Names separated by comma , . Example img src= http://via.placeholder.com/450x150 data-fred-name= header-image data-fred-image-media-source= Assets,Images data-fred-block-class When Fred is loaded, value of this attribute will be appended to class of div.fred--block (which is wrapping the whole Element). When Fred is not loaded, attribute will be added to class of itself. Example div class= image data-fred-block-class= wrapper /div data-fred-class When Fred is loaded, value of this attribute will be added to the own class. Example div class= row data-fred-class= visible-grid /div data-fred-bind Value of the Element will copy from other Element. Example div data-fred-name= name John Doe /div div class= modal div class= modal-header data-fred-bind= name /div div class= modal-content Hello there /div /div data-fred-on-drop The name of the globally accessible function that should be called when this Element is dropped on any Dropzone. The function will receive fredEl as a first attribute. You can use this to trigger a Javascript function, for example, calling a slider initialise script that you normally have document.ready function call. Without using this attribute, you would need to save and reload the page to initialise the newly dropped slider item. Example div class= clock data-fred-on-drop= initClock data-fred-on-setting-change Name of the globally accessible function that should be called when Element setting changes. The function will receive fredEl as first attribute. Example div class= clock data-fred-on-setting-change= reInitClock /div","title":"HTML Attributes"},{"location":"develop/elements/attributes/#data-fred-attributes","text":"The following are the currently available attributes for Fred Elements.","title":"data-fred-\u2026 Attributes"},{"location":"develop/elements/attributes/#contenteditable","text":"When set to true the content of the HTML Element will be editable for end users, including any Elements nested within (for nested Dropzones). This attribute has to be used with data-fred-name to save the value.","title":"contenteditable"},{"location":"develop/elements/attributes/#example","text":"p data-fred-name= description Default value /p","title":"Example"},{"location":"develop/elements/attributes/#data-fred-name","text":"A unique (to this Element) name of the editable HTML Element. Only Elements with this attribute will be saved. By default, Elements with a data-fred-name attribute will automatically behave as if contentedtiable=\"true\" was explicitly declared. The value of this attribute has to be unique across in a single Element, but you can have multiple instances of an Element on the page. In addition, different Elements can share names.","title":"data-fred-name"},{"location":"develop/elements/attributes/#examples","text":"!-- Simple editable paragraph -- p data-fred-name= description Default value /p !-- Editable image -- img src= http://via.placeholder.com/450x150 data-fred-name= header-image","title":"Examples"},{"location":"develop/elements/attributes/#data-fred-attrs","text":"Defines other HTML attributes (comma separated) to save with the content of the HTML Element.","title":"data-fred-attrs"},{"location":"develop/elements/attributes/#example_1","text":"img src= http://via.placeholder.com/450x150 alt= Default Alt data-fred-name= header-image data-fred-attrs= alt","title":"Example"},{"location":"develop/elements/attributes/#data-fred-render","text":"If set to false HTML Element won\u2019t appear when Fred is not loaded. This allows developers to create user-friendly, self-documenting Elements that inform users what they need to do in order to create content.","title":"data-fred-render"},{"location":"develop/elements/attributes/#example_2","text":"p data-fred-render= false Add a *Link Location* setting for this Element to make the button appear. (This will be visible only when Fred is used to create content.) /p","title":"Example"},{"location":"develop/elements/attributes/#data-fred-target","text":"Defines Resource field to store content. Content of the HTML Element will be stored in regular Content field and additionally in the specified target. This attribute can\u2019t be used on a dropzone. Available targets: pagetitle longtitle description introtext menutitle alias template variables (text- or textarea-only)","title":"data-fred-target"},{"location":"develop/elements/attributes/#example_3","text":"h1 data-fred-name= title data-fred-target= pagetitle Default Page Title /h1","title":"Example"},{"location":"develop/elements/attributes/#data-fred-rte","text":"If set to true the Rich Text Editor will be loaded for the editable HTML Element.","title":"data-fred-rte"},{"location":"develop/elements/attributes/#example_4","text":"div data-fred-name= rte-content data-fred-rte= true Default Content /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-rte-config","text":"Specify RTE config that should be used for the Element.","title":"data-fred-rte-config"},{"location":"develop/elements/attributes/#example_5","text":"div data-fred-name= rte-content data-fred-rte= true data-fred-rte-config= simple Default Content /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-dropzone","text":"Defines a new Drop Zone for Fred Elements. This attribute cannot be empty and has to be unique across a single Element. You can create an unlimited number of Dropzones, though more than a few might get quite cumbersome. This is useful for creating alternate layouts like full width, split pages, sidebar pages, etc.","title":"data-fred-dropzone"},{"location":"develop/elements/attributes/#example_6","text":"div data-fred-dropzone= left class= left-content /div div data-fred-dropzone= right class= right-content /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-link-type","text":"Sets a type for a link, used for processing before generating content. Available values: page Used together with other data-fred-link- attributes.","title":"data-fred-link-type"},{"location":"develop/elements/attributes/#example_7","text":"a href= fred.html data-fred-link-type= page data-fred-link-page= 2 Fred /a","title":"Example"},{"location":"develop/elements/attributes/#data-fred-link-page","text":"Defines ID of MODX Resource. Value of this attribute will be used as a link\u2019s href (in MODX format [[~ID]] ) when content is generated.","title":"data-fred-link-page"},{"location":"develop/elements/attributes/#example_8","text":"a href= fred.html data-fred-link-type= page data-fred-link-page= 2 Fred /a","title":"Example"},{"location":"develop/elements/attributes/#data-fred-media-source","text":"This option override globals from Element Settings. Defines Media Source to be used for the Element. Name of the media source is expected and can accommodate multiple Names separated by comma , .","title":"data-fred-media-source"},{"location":"develop/elements/attributes/#example_9","text":"img src= http://via.placeholder.com/450x150 data-fred-name= header-image data-fred-media-source= Assets,Images","title":"Example"},{"location":"develop/elements/attributes/#data-fred-image-media-source","text":"This option override globals from Element Settings and data-fred-media-source (but only for images). Defines Media Source to be used for the Element. Name of the media source is expected and can accommodate multiple Names separated by comma , .","title":"data-fred-image-media-source"},{"location":"develop/elements/attributes/#example_10","text":"img src= http://via.placeholder.com/450x150 data-fred-name= header-image data-fred-image-media-source= Assets,Images","title":"Example"},{"location":"develop/elements/attributes/#data-fred-block-class","text":"When Fred is loaded, value of this attribute will be appended to class of div.fred--block (which is wrapping the whole Element). When Fred is not loaded, attribute will be added to class of itself.","title":"data-fred-block-class"},{"location":"develop/elements/attributes/#example_11","text":"div class= image data-fred-block-class= wrapper /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-class","text":"When Fred is loaded, value of this attribute will be added to the own class.","title":"data-fred-class"},{"location":"develop/elements/attributes/#example_12","text":"div class= row data-fred-class= visible-grid /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-bind","text":"Value of the Element will copy from other Element.","title":"data-fred-bind"},{"location":"develop/elements/attributes/#example_13","text":"div data-fred-name= name John Doe /div div class= modal div class= modal-header data-fred-bind= name /div div class= modal-content Hello there /div /div","title":"Example"},{"location":"develop/elements/attributes/#data-fred-on-drop","text":"The name of the globally accessible function that should be called when this Element is dropped on any Dropzone. The function will receive fredEl as a first attribute. You can use this to trigger a Javascript function, for example, calling a slider initialise script that you normally have document.ready function call. Without using this attribute, you would need to save and reload the page to initialise the newly dropped slider item.","title":"data-fred-on-drop"},{"location":"develop/elements/attributes/#example_14","text":"div class= clock data-fred-on-drop= initClock","title":"Example"},{"location":"develop/elements/attributes/#data-fred-on-setting-change","text":"Name of the globally accessible function that should be called when Element setting changes. The function will receive fredEl as first attribute.","title":"data-fred-on-setting-change"},{"location":"develop/elements/attributes/#example_15","text":"div class= clock data-fred-on-setting-change= reInitClock /div","title":"Example"},{"location":"develop/elements/js_events/","text":"JavaScript Events FredElementDrop This event will trigger when any Element is dropped to a dropzone. You can access fredEl from the event.detail.fredEl object. FredElementSettingChange This event will trigger when Element setting on any Element is changed. You can access fredEl from the event.detail.fredEl object.","title":"JS Events"},{"location":"develop/elements/js_events/#javascript-events","text":"","title":"JavaScript Events"},{"location":"develop/elements/js_events/#fredelementdrop","text":"This event will trigger when any Element is dropped to a dropzone. You can access fredEl from the event.detail.fredEl object.","title":"FredElementDrop"},{"location":"develop/elements/js_events/#fredelementsettingchange","text":"This event will trigger when Element setting on any Element is changed. You can access fredEl from the event.detail.fredEl object.","title":"FredElementSettingChange"},{"location":"develop/elements/markup/","text":"HTML Markup in Fred Elements Fred Elements are made of HTML with specific attributes. The markup can be enhanced using Twig and Element Settings. Markup Examples !-- Simple Element -- div class= panel p data-fred-name= header_text Default Value /p img src= http://via.placeholder.com/450x150 data-fred-name= header_image /div !-- Enhanced Element -- div class= panel {{ panel_class }} p data-fred-name= panel_text Default Value /p {% if cta_link %} a class= btn {{ cta_class }} href= {{ cta_link }} {{ cta_text }} /a {% endif %} /div","title":"HTML Markup & Twig"},{"location":"develop/elements/markup/#html-markup-in-fred-elements","text":"Fred Elements are made of HTML with specific attributes. The markup can be enhanced using Twig and Element Settings.","title":"HTML Markup in Fred Elements"},{"location":"develop/elements/markup/#markup-examples","text":"!-- Simple Element -- div class= panel p data-fred-name= header_text Default Value /p img src= http://via.placeholder.com/450x150 data-fred-name= header_image /div !-- Enhanced Element -- div class= panel {{ panel_class }} p data-fred-name= panel_text Default Value /p {% if cta_link %} a class= btn {{ cta_class }} href= {{ cta_link }} {{ cta_text }} /a {% endif %} /div","title":"Markup Examples"},{"location":"develop/elements/option_sets/","text":"Option Sets Option Sets allow you to create common configurations and frequently used sub-configs (e.g., a set of settings, use of media sources, remote render, or color swatch group) to use across multiple Elements. Complete Each Option Set has a complete flag. If this flag is set to Yes the Option Set can be attached to an Element . Option Sets with No in this flag are meant to be used for including to other Option Sets. You can define repeatable list of settings or specific options that are going to repeat across multiple Option Sets. Available Options remote If set to true XHR request will be fired to render the Element through both Twig and MODX parsers. This means you can have dynamic content that references other pages within a Fred page using MODX Snippets. mediaSource Name of the Media Source to use for Finder. Multiple Names can be passed separated by comma , . imageMediaSource Name of the Media Source to use for Image fields. Multiple Names can be passed separated by comma , . This option overrides mediaSource . settings An array of setting objects and group objects for the Fred Element. Settings can also contain a special import object, to import another option set. Available group properties group - Name of a group of related sub-settings that open when clicked in a secondary panel. The value of the group property will be used as the label for the group settings - An array of setting objects Available setting properties name - Name of the setting, can be used as a Twig variable label - Setting's Label, displayed in the Element Settings panel type - Type of the setting value - Default value Available types text input type=\"text\" any text value select Single select value Type specific properties: options - An object of value:label properties toggle true/false checkbox returns logical true or false colorswatch Visual color picker, from predefined values Type specific properties: options An array of colors; Example: [\"lightcoral\", \"red\", \"black\"] Color can be either a string or an object with following properties: value - the value passed to Twig for the color, which can be anything color - the displayed color for the swatch label - an arbitrary label for the swatch colorpicker Color picker Type specific properties: showAlpha - boolean to show alpha slider; Default: true options - An array of colors; Example: [\"lightcoral\", \"red\", \"black\"] slider Slider input for numbers Type specific properties: min - REQURED ; Minimum value of the slider max - REQURED ; Maximum value of the slider tooltipDecimals: Number of decimals to show in slider's tooltip; Default: 0 step: Number to increment slider's value; Default: 1 page MODX Page select Value is returned as an object in format: {\"id\": 1, \"url\": \"fred.html\"} Refrencing ID or URL alone is done through the dot syntax: {{ page-name-example.id}} Type specific properties: clearButton - If set to true button to clear select will appear parents - If set, only resource from these parents (including parents itself) will show; Value can be string with a comma as a separator or an array resources - If set, only resource with specified IDs will show; Value can be string with a comma as a separator or an array depth - Depth to look for children for specified parents ; Default: 1 image Image select Type specific properties: showPreview - If set to false preview won't appear under the text input mediaSource - Name of the Media Source to use; Overrides imageMediaSource global setting. tagger Select for Tagger tags Type specific properties: autoTag - true/false to show/hide the auto tag hideInput - true/false to show/hide the input group - ID of the Tagger group to use limit - Limit of tags that can be selected Example { settings : [ { name : panel_class , label : Panel Class , type : text , value : }, { group : CTA , settings : [ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false }, { name : color , label : Text Color , type : colorswatch , value : black , options : [{ value : primary , color : blue , label : Primary }, lightcoral , black , rgba(0,255,0,.5) ] }, { name : bg_color , label : Background COlor , type : colorpicker , value : white , showAlpha : true, options : [ lightcoral , black , white ] }, { name : page , label : Page , type : page , value : { id :1, url : [[~1]] } } ] } ] } Import Importing another Option Set is done with a special object with fred-import key. Only not complete Option Sets can be imported Import only works for settings Full import Complete Option Set { settings : { fred-import : all_settings } } All Settings Option Set [ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false } ] Partial import Complete Option Set { settings : [ { name : panel_class , label : Panel Class , type : text , value : }, { fred-import : cta }, { fred-import : text_color } ] } CTA Option Set { group : CTA , settings : [ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false } ] } Text Color Option Set { name : color , label : Text Color , type : colorswatch , value : black , options : [{ value : primary , color : blue , label : Primary }, lightcoral , black , rgba(0,255,0,.5) ] }","title":"Option Sets"},{"location":"develop/elements/option_sets/#option-sets","text":"Option Sets allow you to create common configurations and frequently used sub-configs (e.g., a set of settings, use of media sources, remote render, or color swatch group) to use across multiple Elements.","title":"Option Sets"},{"location":"develop/elements/option_sets/#complete","text":"Each Option Set has a complete flag. If this flag is set to Yes the Option Set can be attached to an Element . Option Sets with No in this flag are meant to be used for including to other Option Sets. You can define repeatable list of settings or specific options that are going to repeat across multiple Option Sets.","title":"Complete"},{"location":"develop/elements/option_sets/#available-options","text":"","title":"Available Options"},{"location":"develop/elements/option_sets/#remote","text":"If set to true XHR request will be fired to render the Element through both Twig and MODX parsers. This means you can have dynamic content that references other pages within a Fred page using MODX Snippets.","title":"remote"},{"location":"develop/elements/option_sets/#mediasource","text":"Name of the Media Source to use for Finder. Multiple Names can be passed separated by comma , .","title":"mediaSource"},{"location":"develop/elements/option_sets/#imagemediasource","text":"Name of the Media Source to use for Image fields. Multiple Names can be passed separated by comma , . This option overrides mediaSource .","title":"imageMediaSource"},{"location":"develop/elements/option_sets/#settings","text":"An array of setting objects and group objects for the Fred Element. Settings can also contain a special import object, to import another option set.","title":"settings"},{"location":"develop/elements/option_sets/#available-group-properties","text":"group - Name of a group of related sub-settings that open when clicked in a secondary panel. The value of the group property will be used as the label for the group settings - An array of setting objects","title":"Available group properties"},{"location":"develop/elements/option_sets/#available-setting-properties","text":"name - Name of the setting, can be used as a Twig variable label - Setting's Label, displayed in the Element Settings panel type - Type of the setting value - Default value","title":"Available setting properties"},{"location":"develop/elements/option_sets/#available-types","text":"text input type=\"text\" any text value select Single select value Type specific properties: options - An object of value:label properties toggle true/false checkbox returns logical true or false colorswatch Visual color picker, from predefined values Type specific properties: options An array of colors; Example: [\"lightcoral\", \"red\", \"black\"] Color can be either a string or an object with following properties: value - the value passed to Twig for the color, which can be anything color - the displayed color for the swatch label - an arbitrary label for the swatch colorpicker Color picker Type specific properties: showAlpha - boolean to show alpha slider; Default: true options - An array of colors; Example: [\"lightcoral\", \"red\", \"black\"] slider Slider input for numbers Type specific properties: min - REQURED ; Minimum value of the slider max - REQURED ; Maximum value of the slider tooltipDecimals: Number of decimals to show in slider's tooltip; Default: 0 step: Number to increment slider's value; Default: 1 page MODX Page select Value is returned as an object in format: {\"id\": 1, \"url\": \"fred.html\"} Refrencing ID or URL alone is done through the dot syntax: {{ page-name-example.id}} Type specific properties: clearButton - If set to true button to clear select will appear parents - If set, only resource from these parents (including parents itself) will show; Value can be string with a comma as a separator or an array resources - If set, only resource with specified IDs will show; Value can be string with a comma as a separator or an array depth - Depth to look for children for specified parents ; Default: 1 image Image select Type specific properties: showPreview - If set to false preview won't appear under the text input mediaSource - Name of the Media Source to use; Overrides imageMediaSource global setting. tagger Select for Tagger tags Type specific properties: autoTag - true/false to show/hide the auto tag hideInput - true/false to show/hide the input group - ID of the Tagger group to use limit - Limit of tags that can be selected","title":"Available types"},{"location":"develop/elements/option_sets/#example","text":"{ settings : [ { name : panel_class , label : Panel Class , type : text , value : }, { group : CTA , settings : [ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false }, { name : color , label : Text Color , type : colorswatch , value : black , options : [{ value : primary , color : blue , label : Primary }, lightcoral , black , rgba(0,255,0,.5) ] }, { name : bg_color , label : Background COlor , type : colorpicker , value : white , showAlpha : true, options : [ lightcoral , black , white ] }, { name : page , label : Page , type : page , value : { id :1, url : [[~1]] } } ] } ] }","title":"Example"},{"location":"develop/elements/option_sets/#import","text":"Importing another Option Set is done with a special object with fred-import key. Only not complete Option Sets can be imported Import only works for settings","title":"Import"},{"location":"develop/elements/option_sets/#full-import","text":"","title":"Full import"},{"location":"develop/elements/option_sets/#complete-option-set","text":"{ settings : { fred-import : all_settings } }","title":"Complete Option Set"},{"location":"develop/elements/option_sets/#all-settings-option-set","text":"[ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false } ]","title":"All Settings Option Set"},{"location":"develop/elements/option_sets/#partial-import","text":"","title":"Partial import"},{"location":"develop/elements/option_sets/#complete-option-set_1","text":"{ settings : [ { name : panel_class , label : Panel Class , type : text , value : }, { fred-import : cta }, { fred-import : text_color } ] }","title":"Complete Option Set"},{"location":"develop/elements/option_sets/#cta-option-set","text":"{ group : CTA , settings : [ { name : cta_class , label : CTA Class , type : select , options : { danger : Red CTA , info : Blue CTA , default : Default CTA }, value : default }, { name : show_cta , label : Show CTA , type : toggle , value : false } ] }","title":"CTA Option Set"},{"location":"develop/elements/option_sets/#text-color-option-set","text":"{ name : color , label : Text Color , type : colorswatch , value : black , options : [{ value : primary , color : blue , label : Primary }, lightcoral , black , rgba(0,255,0,.5) ] }","title":"Text Color Option Set"},{"location":"develop/elements/options/","text":"Options Options are what defines the controls given to end users when configuring Elements. They are defined in an Option Set , or option override, when creating/updating an Element. The available options in an Option Set can be used in overrides. todo @theboxer @matdave this isn't clear about overrides \u2026 needs clarification","title":"Options"},{"location":"develop/elements/options/#options","text":"Options are what defines the controls given to end users when configuring Elements. They are defined in an Option Set , or option override, when creating/updating an Element. The available options in an Option Set can be used in overrides. todo @theboxer @matdave this isn't clear about overrides \u2026 needs clarification","title":"Options"},{"location":"develop/media_sources/","text":"Media Sources can either be assigned globally via a setting in the Media Source itself, or in an Element\u2019s settings by referencing the Media Source Name(s). On install two new settings are added to each Media Source. If you'll want to access Media Sources from Fred, you will need to manually add these settings. NOTE: Fred does not currently check a specific user\u2019s Media Source permissions, and only reviews the following permissions. Media Source Settings fred A Yes/No setting that defines if the Media Source is globally available to Elements rendered in Fred. (defaults to no) fredReadOnly A Yes/No setting that locks a Media Source from being written to. (defaults to no) Element Settings mediaSource ID of the Media Source to use for Finder. Multiple IDs can be passed separated by comma , . imageMediaSource ID of the Media Source to use for Image fields. Multiple IDs can be passed separated by comma , . This option overrides mediaSource .","title":"Media Sources"},{"location":"develop/media_sources/#media-source-settings","text":"","title":"Media Source Settings"},{"location":"develop/media_sources/#fred","text":"A Yes/No setting that defines if the Media Source is globally available to Elements rendered in Fred. (defaults to no)","title":"fred"},{"location":"develop/media_sources/#fredreadonly","text":"A Yes/No setting that locks a Media Source from being written to. (defaults to no)","title":"fredReadOnly"},{"location":"develop/media_sources/#element-settings","text":"","title":"Element Settings"},{"location":"develop/media_sources/#mediasource","text":"ID of the Media Source to use for Finder. Multiple IDs can be passed separated by comma , .","title":"mediaSource"},{"location":"develop/media_sources/#imagemediasource","text":"ID of the Media Source to use for Image fields. Multiple IDs can be passed separated by comma , . This option overrides mediaSource .","title":"imageMediaSource"},{"location":"develop/rte_configs/","text":"Rich Text Editor (RTE) Configs todo @theboxer The default RTE configuration for the TinyMCE Editor for Fred is as follows: { theme : inlite , inline : true, plugins : modxlink image imagetools media lists , insert_toolbar : image media quicktable modxlink , selection_toolbar : bold italic underline | alignleft aligncenter alignright | bullist numlist | modxlink h2 h3 h4 blockquote , image_advtab : true, imagetools_toolbar : alignleft aligncenter alignright | rotateleft rotateright | flipv fliph | editimage imageoptions , auto_focus : false, branding : false, relative_urls : false } For an ultra-minimal streamlined RTE, for example for only allowing italics and bolding in headlines, you might use the following RTE config: { theme : inlite ; inline : true, selection_toolbar : bold italic } To learn more about plugins and options for TinyMCE, please see the TinyMCE Examples Demos .","title":"RTE Configs"},{"location":"develop/rte_configs/#rich-text-editor-rte-configs","text":"todo @theboxer The default RTE configuration for the TinyMCE Editor for Fred is as follows: { theme : inlite , inline : true, plugins : modxlink image imagetools media lists , insert_toolbar : image media quicktable modxlink , selection_toolbar : bold italic underline | alignleft aligncenter alignright | bullist numlist | modxlink h2 h3 h4 blockquote , image_advtab : true, imagetools_toolbar : alignleft aligncenter alignright | rotateleft rotateright | flipv fliph | editimage imageoptions , auto_focus : false, branding : false, relative_urls : false } For an ultra-minimal streamlined RTE, for example for only allowing italics and bolding in headlines, you might use the following RTE config: { theme : inlite ; inline : true, selection_toolbar : bold italic } To learn more about plugins and options for TinyMCE, please see the TinyMCE Examples Demos .","title":"Rich Text Editor (RTE) Configs"},{"location":"develop/system_settings/","text":"Fred system settings control how your site reacts. Since Fred is loaded on the frontend, you can change how these works per-context, user, or group. Default Element (fred.default_element) The default Element settings allows you to chose a default Fred Element and target area for placing the content on existing documents. The setting is formatted as ID|target where ID is the identification number of the Chunk and the target is the HTML Element within that Chunk identified with a data-fred-name attribute. Example Chunk: Content Area (13) section class= container div data-fred-name= content data-fred-rte= true /div /section You would set the value to be 13|content Element\u2019s Group Sort (fred.element_group_sort) By default Element categories are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order. Blueprint Sort (fred.blueprint_sort) By default blueprints are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order. Blueprint\u2019s Category Sort (fred.blueprint_category_sort) By default blueprint categories are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order. Icon Editor (fred.icon_editor) Fred can use plugins that tap into different Element types. The Icon Editor targets i Elements that also have a data-fred-name attribute. Image Editor (fred.image_editor) Fred can use plugins that tap into different Element types. The Image Editor targets img Elements that also have a data-fred-name attribute. Position of Launcher (fred.launcher_position) The Fred launcher can be positioned in any corner of the site to prevent hiding an Element on your design. Options include: bottom_left , bottom , bottom_right , top_left , top , and top_right . Rich Text Editor (fred.rte) Fred can use plugins that tap into different Element types. The Image Editor targets any wrapper Elements that also have a data-fred-name attribute and are set to contenteditable=\"true\" data-fred-rte=\"true\" .","title":"System Settings"},{"location":"develop/system_settings/#default-element-freddefault_element","text":"The default Element settings allows you to chose a default Fred Element and target area for placing the content on existing documents. The setting is formatted as ID|target where ID is the identification number of the Chunk and the target is the HTML Element within that Chunk identified with a data-fred-name attribute.","title":"Default Element (fred.default_element)"},{"location":"develop/system_settings/#example-chunk-content-area-13","text":"section class= container div data-fred-name= content data-fred-rte= true /div /section You would set the value to be 13|content","title":"Example Chunk: Content Area (13)"},{"location":"develop/system_settings/#elements-group-sort-fredelement_group_sort","text":"By default Element categories are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order.","title":"Element\u2019s Group Sort (fred.element_group_sort)"},{"location":"develop/system_settings/#blueprint-sort-fredblueprint_sort","text":"By default blueprints are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order.","title":"Blueprint Sort (fred.blueprint_sort)"},{"location":"develop/system_settings/#blueprints-category-sort-fredblueprint_category_sort","text":"By default blueprint categories are sorted by name , but you can switch it to use the rank if you want them to be sorted in a specific order.","title":"Blueprint\u2019s Category Sort (fred.blueprint_category_sort)"},{"location":"develop/system_settings/#icon-editor-fredicon_editor","text":"Fred can use plugins that tap into different Element types. The Icon Editor targets i Elements that also have a data-fred-name attribute.","title":"Icon Editor (fred.icon_editor)"},{"location":"develop/system_settings/#image-editor-fredimage_editor","text":"Fred can use plugins that tap into different Element types. The Image Editor targets img Elements that also have a data-fred-name attribute.","title":"Image Editor (fred.image_editor)"},{"location":"develop/system_settings/#position-of-launcher-fredlauncher_position","text":"The Fred launcher can be positioned in any corner of the site to prevent hiding an Element on your design. Options include: bottom_left , bottom , bottom_right , top_left , top , and top_right .","title":"Position of Launcher (fred.launcher_position)"},{"location":"develop/system_settings/#rich-text-editor-fredrte","text":"Fred can use plugins that tap into different Element types. The Image Editor targets any wrapper Elements that also have a data-fred-name attribute and are set to contenteditable=\"true\" data-fred-rte=\"true\" .","title":"Rich Text Editor (fred.rte)"},{"location":"develop/templates/","text":"Preparing MODX Templates for use with Fred Fred only loads on Pages which use MODX Templates assigned to a Fred Theme ( Extras Fred Themed Templates ). Any Resource using a template listed in that table will block access to the Content area in the Manager and load Fred on the front-end when logged in for editing. Dropzones Most templates will have a content Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you need. In your Fred Templates, you need to define where Dropzones will be by using data-fred-\u2026 attributes with HTML. Simple Fred Template Example with One Dropzone html head title [[*pagetitle]] /title /head body div data-fred-dropzone= content data-fred-min-height= 500px [[*content]] /div /body /html The default minimum height for a dropzone is only 5 pixels, which may be a bit small to target. If you wish to have a larger \u201cempty\u201d default state, add a data-fred-min-height=\"250px\" setting with your desired minimum height. A larger minimum height on a dropzone can make it easier to target for dropping Elements when empty. The size of your min-height might also need to change if you have competing or overlapping Elements, such as a fixed top navigation bar. The dropzone\u2019s data-fred-dropzone=\"content\" attribute is required and tells it where to save the rendered Fred content. It also needs to contain a reference to the [[*content]] tag inside of it. When Fred loads, it clears out the content rendered in the dropzone, and loads it with Element data. However, when Fred is not loaded, it just renders whatever tags you have in that area. Multiple Dropzones Sometimes you may want to have a more complex layout with multiple Dropzones, like for a main content area and a sidebar. Fred installs a new Template Variable type for this purpose: Fred Dropzone . To create another dropzone do the following: From the MODX Manager, navigate to the Elements sidebar tree Template Variables drop-down list + circle icon to create a new TV Give the TV a name, such as \u201csidebar\u201d and assign it to a Fred category From the Input Options tab choose \"Fred Dropzone\" from the Input Type select list If you want to see the rendered content from the Manager, change the value of the last \u201cHide Field from Manager:\u201d option to \u201cNo\u201d. Example Template with sidebar Dropzone html head title [[*pagetitle]] /title /head body section id= wrapper div id= main data-fred-dropzone= content data-fred-min-height= 500px [[*content]] /div aside id= sidebar data-fred-dropzone= sidebar data-fred-min-height= 250px [[*sidebar]] /aside /section /body /html","title":"MODX Templates for Fred"},{"location":"develop/templates/#preparing-modx-templates-for-use-with-fred","text":"Fred only loads on Pages which use MODX Templates assigned to a Fred Theme ( Extras Fred Themed Templates ). Any Resource using a template listed in that table will block access to the Content area in the Manager and load Fred on the front-end when logged in for editing.","title":"Preparing MODX Templates for use with Fred"},{"location":"develop/templates/#dropzones","text":"Most templates will have a content Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you need. In your Fred Templates, you need to define where Dropzones will be by using data-fred-\u2026 attributes with HTML.","title":"Dropzones"},{"location":"develop/templates/#simple-fred-template-example-with-one-dropzone","text":"html head title [[*pagetitle]] /title /head body div data-fred-dropzone= content data-fred-min-height= 500px [[*content]] /div /body /html The default minimum height for a dropzone is only 5 pixels, which may be a bit small to target. If you wish to have a larger \u201cempty\u201d default state, add a data-fred-min-height=\"250px\" setting with your desired minimum height. A larger minimum height on a dropzone can make it easier to target for dropping Elements when empty. The size of your min-height might also need to change if you have competing or overlapping Elements, such as a fixed top navigation bar. The dropzone\u2019s data-fred-dropzone=\"content\" attribute is required and tells it where to save the rendered Fred content. It also needs to contain a reference to the [[*content]] tag inside of it. When Fred loads, it clears out the content rendered in the dropzone, and loads it with Element data. However, when Fred is not loaded, it just renders whatever tags you have in that area.","title":"Simple Fred Template Example with One Dropzone"},{"location":"develop/templates/#multiple-dropzones","text":"Sometimes you may want to have a more complex layout with multiple Dropzones, like for a main content area and a sidebar. Fred installs a new Template Variable type for this purpose: Fred Dropzone . To create another dropzone do the following: From the MODX Manager, navigate to the Elements sidebar tree Template Variables drop-down list + circle icon to create a new TV Give the TV a name, such as \u201csidebar\u201d and assign it to a Fred category From the Input Options tab choose \"Fred Dropzone\" from the Input Type select list If you want to see the rendered content from the Manager, change the value of the last \u201cHide Field from Manager:\u201d option to \u201cNo\u201d.","title":"Multiple Dropzones"},{"location":"develop/templates/#example-template-with-sidebar-dropzone","text":"html head title [[*pagetitle]] /title /head body section id= wrapper div id= main data-fred-dropzone= content data-fred-min-height= 500px [[*content]] /div aside id= sidebar data-fred-dropzone= sidebar data-fred-min-height= 250px [[*sidebar]] /aside /section /body /html","title":"Example Template with sidebar Dropzone"}]}