{
    "docs": [
        {
            "location": "/",
            "text": "Fred\n\n\nFred is a flexible and powerful drag-and-drop \nfr\nont-end \ned\nitor for MODX CMS. It enables non-technical users to create beautiful content without having to know markup or dealing with overwhelming back-end interfaces. It fully supports MODX Snippets and intuitive controls like sliders and color pickers for configuring content on the page. \n\n\nWhat differentiates Fred from other visual content builders is MODX\u2019s core tenet of Creative Freedom: it doesn\u2019t force you to use one HTML/CSS framework, empowering you to create anything you can imagine. Expand upon or customize a provided starter theme, or create a complete solution from scratch that\u2019s 100% unique to you. \n\n\nSince there are \nno\n restrictions on markup, templates, or techniques, designers, theme creators, and front-end developers can realize their creative vision with pixel-perfect precision\u2014and can confidently turn over content creation duties to regular end-users without fear of things breaking. Fred leads to amazing websites without requiring designer and developer involvement day-to-day.\n\n\nHow Fred Works\n\n\nTo build sites with Fred, users drag content \u201cElements\u201d or \u201cBlueprints\u201d from a sidebar, drop them where desired on a page, and edit the settings and placeholder content without ever having to use a back-end admin tool. Fred\u2019s features combine to make it a powerful visual content builder:\n\n\n\n\nTransform static Design Libraries into a live content creating tool that strictly adheres to brand standards and that is easily understood and used by non-technical team members across your entire organization\n\n\nUse optional conditional/looping Twig template logic to create robust Elements limited only by your imagination\n\n\nCreate and organize collections of Elements as building blocks for pages\n\n\nBlueprints provide \u201creplace the placeholders\u201d full- or partial-page templates\n\n\nMultiple dropzones for complete control of every page layout\n\n\nConfigure content using a variety of controls including toggles, text inputs, date pickers, select inputs, sliders, Resource pickers, and color pickers\n\n\nSupports MODX code Snippets with live Ajax rendering of changes\n\n\nVisual Font Awesome 5 icon picker\u2014developers can create other icon pickers, too \n\n\nSimple content formatting with a curated default TinyMCE rich text editor\n\n\nRearrange andn re-order page content via drag-and-drop\n\n\nQuickly duplicate existing elements to build up galleries and sliders\n\n\nFred content renders down to cachable output for blazing-fast page speed\n\n\nComplete set of production-ready Bootstrap 4 Elements for theme authors to use as a starting point",
            "title": "Fred"
        },
        {
            "location": "/#fred",
            "text": "Fred is a flexible and powerful drag-and-drop  fr ont-end  ed itor for MODX CMS. It enables non-technical users to create beautiful content without having to know markup or dealing with overwhelming back-end interfaces. It fully supports MODX Snippets and intuitive controls like sliders and color pickers for configuring content on the page.   What differentiates Fred from other visual content builders is MODX\u2019s core tenet of Creative Freedom: it doesn\u2019t force you to use one HTML/CSS framework, empowering you to create anything you can imagine. Expand upon or customize a provided starter theme, or create a complete solution from scratch that\u2019s 100% unique to you.   Since there are  no  restrictions on markup, templates, or techniques, designers, theme creators, and front-end developers can realize their creative vision with pixel-perfect precision\u2014and can confidently turn over content creation duties to regular end-users without fear of things breaking. Fred leads to amazing websites without requiring designer and developer involvement day-to-day.",
            "title": "Fred"
        },
        {
            "location": "/#how-fred-works",
            "text": "To build sites with Fred, users drag content \u201cElements\u201d or \u201cBlueprints\u201d from a sidebar, drop them where desired on a page, and edit the settings and placeholder content without ever having to use a back-end admin tool. Fred\u2019s features combine to make it a powerful visual content builder:   Transform static Design Libraries into a live content creating tool that strictly adheres to brand standards and that is easily understood and used by non-technical team members across your entire organization  Use optional conditional/looping Twig template logic to create robust Elements limited only by your imagination  Create and organize collections of Elements as building blocks for pages  Blueprints provide \u201creplace the placeholders\u201d full- or partial-page templates  Multiple dropzones for complete control of every page layout  Configure content using a variety of controls including toggles, text inputs, date pickers, select inputs, sliders, Resource pickers, and color pickers  Supports MODX code Snippets with live Ajax rendering of changes  Visual Font Awesome 5 icon picker\u2014developers can create other icon pickers, too   Simple content formatting with a curated default TinyMCE rich text editor  Rearrange andn re-order page content via drag-and-drop  Quickly duplicate existing elements to build up galleries and sliders  Fred content renders down to cachable output for blazing-fast page speed  Complete set of production-ready Bootstrap 4 Elements for theme authors to use as a starting point",
            "title": "How Fred Works"
        },
        {
            "location": "/gettingstarted/",
            "text": "Getting Started\n\n\nSetting up Fred involves a few requirements before you can use it to create content. The easiest way to start is to install a Theme exported from Fred which should include everything you need to succeed.\n\n\n\n\nInstall a \nFred Theme from the MODX Extras repository\n into your MODX website\n\n\nAdd a new page to your site using one of the Templates from the Fred theme and save the Page\n\n\nClick the \nPreview\n button to visit this page from the front-end and start building with Fred\n\n\n\n\nIf you\u2019re interested in creating Themes, it is also straightforward as outlined and detailed below:\n\n\n\n\nInstall \nFred from MODX.com\n, and probably the \nicon picker\n and \nTinyMCE RTE\n, too\n\n\nSet up a MODX Template with a content Dropzone\n\n\nAssign this Template to a Fred theme\n\n\nCreate Categories for your Fred Elements\n\n\nCreate your first Fred Element\n\n\n\n\nStep 1: Install Fred\n\n\nFred is available as a transport package. In your MODX installation, go to \nExtras\n > \nInstaller\n and click on the Download Extras button. Search to find bring up Fred. \n\n\nYou should also see other Extras listed made for Fred, such as a Font Awesome icon picker and a TinyMCE RTE. If you decide to add these also, follow their setup instructions.\n\n\nAfter your Fred Extras finish downloading, install them from the Packages grid. \n\n\nStep 2: Set up a Template\n\n\nFred needs a \u201cdropzone\u201d to know where content can go, indicated by adding a \ndata-fred-dropzone\n attribute to an HTML entity, often a \ndiv\n tag. For example, where the \n[[*content]]\n tag would normally be in a Template, add the following:\n\n\n<div data-fred-dropzone=\"content\"  data-fred-name=\"content\" data-fred-target=\"content\">\n    [[*content]]\n</div>\n\n\n\nNote the value of the \ndata-fred-dropzone=\"content\"\n attribute indicates where to render your content once you save a page in Fred, in this case, the \n[[*content]]\n. Fred also supports multiple Dropzones; see the \ntemplates documentation\n for more information.\n\n\nStep 3: Assign a Template to a Fred Theme\n\n\n\n\nIn the MODX Manager, go to the \nExtras\n > \nFred\n menu and switch to \nThemed Templates\n tab\n\n\nClick the \nAssign Theme to a Template\n button\n\n\nSelect all Templates you wish to use with this Fred Theme\n\n\nSelect the \nDefault\n Theme\n\n\nClick the \nSave\n button\n\n\n\n\nIn the Manager, Resources that use Templates assigned to a Fred Theme should have an \"Open in Fred\" button. From the front-end, you should see either three icons which launch Fred at the bottom-left of the page or a Fred sidebar. \n\n\nStep 4: Create Categories for Elements\n\n\nFred organizes Elements using categories. Open the Elements Manager Page from the \nExtras\n > \nFred\n > \nElements\n menu, and switch to the \nCategories\n tab to create Categories. For example, your categories could look like this:\n\n\n\n\nPage Content\n\n\nIntros\n\n\nImages\n\n\nTestimonials\n\n\n\u2026\n\n\n\n\nFred requires at least one Category before creating actual content Element.\n\n\nStep 5: Create your first elements\n\n\nFred Elements can be as simple as raw text or more complex like a  responsive product catalog detail page.  Let\u2019s start by creating a simple heading element, often the first thing on a page. \n\n\nSwitch to the \nElements\n tab in Element's CMP (\nExtras\n > \nFred\n > \nElements\n) and click the \nCreate Element\n button. Fill the name (\nH1 Heading\n), category (\nText\n), image (\nhttps://placehold.it/300x150&text=Heading\n).\n\n\n\n\nAdd the following markup:\n\n\n<h1 contenteditable=\"true\" data-fred-name=\"heading\">Hello, world.</h1>\n\n\n\nSave this Element, go back to the front-end of your Resource, and refresh the page.\n\n\nClick on the orange Elements stacked boxes icon or the MODX icon in the launcher at the bottom left of the page. In the sidebar Elements tab, you should now see the categories you created earlier in step 4. Hover the \nText\n category to see your freshly created \nH1 Heading\n Element and drag it into the empty dropzone.\n\n\n\n\nCongratulations, you just added your first Element to a page using Fred!\n\n\nSelect the placeholder \u201cHello, world.\u201d text and start typing to edit its content. When hovering over an Element, you\u2019ll see an additional toolbar that lets you duplicate, delete, or move the element on your page.  When you\u2019re happy with the new page title, click the green checkbox button to save.\n\n\nLet\u2019s create another element for a single paragraph: \n\n\n\n\nCreate an Element under same category with the name \nBasic Paragraph\n, \nhttps://placehold.it/300x150&text=Paragraph\n for the image, and \n<p contenteditable=\"true\" data-fred-name=\"paragraph\">Your content goes here.</p>\n for the markup\n\n\nSave this in the Manager\n\n\nFrom the front-end, reload the page\n\n\nDrag this new Element beneath the previously created title, and drop it in place \n\n\nChange the text and save\n\n\n\n\n\n\nLearn more\n\n\nNow that you have the basics of Fred working continue reading the documentation to learn more about how Fred works.",
            "title": "Getting Started"
        },
        {
            "location": "/gettingstarted/#getting-started",
            "text": "Setting up Fred involves a few requirements before you can use it to create content. The easiest way to start is to install a Theme exported from Fred which should include everything you need to succeed.   Install a  Fred Theme from the MODX Extras repository  into your MODX website  Add a new page to your site using one of the Templates from the Fred theme and save the Page  Click the  Preview  button to visit this page from the front-end and start building with Fred   If you\u2019re interested in creating Themes, it is also straightforward as outlined and detailed below:   Install  Fred from MODX.com , and probably the  icon picker  and  TinyMCE RTE , too  Set up a MODX Template with a content Dropzone  Assign this Template to a Fred theme  Create Categories for your Fred Elements  Create your first Fred Element",
            "title": "Getting Started"
        },
        {
            "location": "/gettingstarted/#step-1-install-fred",
            "text": "Fred is available as a transport package. In your MODX installation, go to  Extras  >  Installer  and click on the Download Extras button. Search to find bring up Fred.   You should also see other Extras listed made for Fred, such as a Font Awesome icon picker and a TinyMCE RTE. If you decide to add these also, follow their setup instructions.  After your Fred Extras finish downloading, install them from the Packages grid.",
            "title": "Step 1: Install Fred"
        },
        {
            "location": "/gettingstarted/#step-2-set-up-a-template",
            "text": "Fred needs a \u201cdropzone\u201d to know where content can go, indicated by adding a  data-fred-dropzone  attribute to an HTML entity, often a  div  tag. For example, where the  [[*content]]  tag would normally be in a Template, add the following:  <div data-fred-dropzone=\"content\"  data-fred-name=\"content\" data-fred-target=\"content\">\n    [[*content]]\n</div>  Note the value of the  data-fred-dropzone=\"content\"  attribute indicates where to render your content once you save a page in Fred, in this case, the  [[*content]] . Fred also supports multiple Dropzones; see the  templates documentation  for more information.",
            "title": "Step 2: Set up a Template"
        },
        {
            "location": "/gettingstarted/#step-3-assign-a-template-to-a-fred-theme",
            "text": "In the MODX Manager, go to the  Extras  >  Fred  menu and switch to  Themed Templates  tab  Click the  Assign Theme to a Template  button  Select all Templates you wish to use with this Fred Theme  Select the  Default  Theme  Click the  Save  button   In the Manager, Resources that use Templates assigned to a Fred Theme should have an \"Open in Fred\" button. From the front-end, you should see either three icons which launch Fred at the bottom-left of the page or a Fred sidebar.",
            "title": "Step 3: Assign a Template to a Fred Theme"
        },
        {
            "location": "/gettingstarted/#step-4-create-categories-for-elements",
            "text": "Fred organizes Elements using categories. Open the Elements Manager Page from the  Extras  >  Fred  >  Elements  menu, and switch to the  Categories  tab to create Categories. For example, your categories could look like this:   Page Content  Intros  Images  Testimonials  \u2026   Fred requires at least one Category before creating actual content Element.",
            "title": "Step 4: Create Categories for Elements"
        },
        {
            "location": "/gettingstarted/#step-5-create-your-first-elements",
            "text": "Fred Elements can be as simple as raw text or more complex like a  responsive product catalog detail page.  Let\u2019s start by creating a simple heading element, often the first thing on a page.   Switch to the  Elements  tab in Element's CMP ( Extras  >  Fred  >  Elements ) and click the  Create Element  button. Fill the name ( H1 Heading ), category ( Text ), image ( https://placehold.it/300x150&text=Heading ).   Add the following markup:  <h1 contenteditable=\"true\" data-fred-name=\"heading\">Hello, world.</h1>  Save this Element, go back to the front-end of your Resource, and refresh the page.  Click on the orange Elements stacked boxes icon or the MODX icon in the launcher at the bottom left of the page. In the sidebar Elements tab, you should now see the categories you created earlier in step 4. Hover the  Text  category to see your freshly created  H1 Heading  Element and drag it into the empty dropzone.   Congratulations, you just added your first Element to a page using Fred!  Select the placeholder \u201cHello, world.\u201d text and start typing to edit its content. When hovering over an Element, you\u2019ll see an additional toolbar that lets you duplicate, delete, or move the element on your page.  When you\u2019re happy with the new page title, click the green checkbox button to save.  Let\u2019s create another element for a single paragraph:    Create an Element under same category with the name  Basic Paragraph ,  https://placehold.it/300x150&text=Paragraph  for the image, and  <p contenteditable=\"true\" data-fred-name=\"paragraph\">Your content goes here.</p>  for the markup  Save this in the Manager  From the front-end, reload the page  Drag this new Element beneath the previously created title, and drop it in place   Change the text and save",
            "title": "Step 5: Create your first elements"
        },
        {
            "location": "/gettingstarted/#learn-more",
            "text": "Now that you have the basics of Fred working continue reading the documentation to learn more about how Fred works.",
            "title": "Learn more"
        },
        {
            "location": "/templates/",
            "text": "Fred is only loads on Pages which use MODX Templates that are assigned to a Fred Theme (\nExtras\n > \nFred\n > \nThemed Templates\n). Any Resources using a template listed in that table will block access to the content area in the Manager and load Fred on the front-end when logged in for editing.\n\n\nDropzones\n\n\nMost templates will have a \ncontent\n Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you need. In your Fred Templates, you need to define where Dropzones will be by using \ndata-fred-\u2026\n attributes with HTML.\n\n\nSimple Fred Template Example with One Dropzone\n\n\n<html>\n<head>\n    <title>[[*pagetitle]]</title>\n\n</head>\n<body >\n    <div data-fred-dropzone=\"content\" data-fred-min-height=\"500px\">\n        [[*content]]\n    </div>\n</body>\n</html>\n\n\n\n\nThe default minimum height for a dropzone is only 5 pixels, which may be a bit small to target. If you wish to have a larger \u201cempty\u201d default state, add a \ndata-fred-min-height=\"250px\"\n setting with your desired minimum height. A larger minimum height on a dropzone can make it easier to target for dropping Elements when empty. The size of your min-height might also need to change if you have competing or overlapping elements, such as a fixed top navigation bar.\n\n\nThe dropzone\u2019s \ndata-fred-dropzone=\"content\"\n attribute is required and tells it where to save the rendered Fred content. It also needs to contain a reference to the \n[[*content]]\n tag inside of it. When Fred loads, it clears out the content rendered in the dropzone, and loads it with element data. However, when Fred is not loaded, it just renders whatever tags you have in that area.\n\n\nMultiple Dropzones\n\n\nSometimes you may want to have a more complex layout with multiple Dropzones, like for a main content area and a sidebar. Fred installs a new Template Variable type for this purpose: \nFred Dropzone\n. To create another dropzone do the following:\n\n\n\n\nFrom the MODX Manager, navigate to the \nElements\n sidebar tree > \nTemplate Variables\n drop-down list > \n+\n circle icon to create a new TV\n\n\nGive the TV a name, such as \u201csidebar\u201d and assign it to a Fred category\n\n\nFrom the \nInput Options\n tab choose \"Fred Dropzone\" from the Input Type select list\n\n\nIf you want to see the rendered content from the Manager, change the value of the last \u201cHide Field from Manager:\u201d option to \u201cNo\u201d.\n\n\n\n\n\n\nFred Template Example with \nsidebar\n Dropzone\n\n\n<html>\n<head>\n    <title>[[*pagetitle]]</title>\n\n</head>\n<body >\n    <section id=\"wrapper\">\n        <div id=\"main\" data-fred-dropzone=\"content\" data-fred-min-height=\"500px\">\n            [[*content]]\n        </div>\n        <aside id=\"sidebar\" data-fred-dropzone=\"sidebar\" data-fred-min-height=\"250px\">\n            [[*sidebar]]\n        </aside>\n    </section>\n</body>\n</html>",
            "title": "Templates"
        },
        {
            "location": "/templates/#dropzones",
            "text": "Most templates will have a  content  Dropzone. Fred also supports multiple Dropzones for things like sidebars, headers, footers, or any other purpose you need. In your Fred Templates, you need to define where Dropzones will be by using  data-fred-\u2026  attributes with HTML.",
            "title": "Dropzones"
        },
        {
            "location": "/templates/#simple-fred-template-example-with-one-dropzone",
            "text": "<html>\n<head>\n    <title>[[*pagetitle]]</title>\n\n</head>\n<body >\n    <div data-fred-dropzone=\"content\" data-fred-min-height=\"500px\">\n        [[*content]]\n    </div>\n</body>\n</html>  The default minimum height for a dropzone is only 5 pixels, which may be a bit small to target. If you wish to have a larger \u201cempty\u201d default state, add a  data-fred-min-height=\"250px\"  setting with your desired minimum height. A larger minimum height on a dropzone can make it easier to target for dropping Elements when empty. The size of your min-height might also need to change if you have competing or overlapping elements, such as a fixed top navigation bar.  The dropzone\u2019s  data-fred-dropzone=\"content\"  attribute is required and tells it where to save the rendered Fred content. It also needs to contain a reference to the  [[*content]]  tag inside of it. When Fred loads, it clears out the content rendered in the dropzone, and loads it with element data. However, when Fred is not loaded, it just renders whatever tags you have in that area.",
            "title": "Simple Fred Template Example with One Dropzone"
        },
        {
            "location": "/templates/#multiple-dropzones",
            "text": "Sometimes you may want to have a more complex layout with multiple Dropzones, like for a main content area and a sidebar. Fred installs a new Template Variable type for this purpose:  Fred Dropzone . To create another dropzone do the following:   From the MODX Manager, navigate to the  Elements  sidebar tree >  Template Variables  drop-down list >  +  circle icon to create a new TV  Give the TV a name, such as \u201csidebar\u201d and assign it to a Fred category  From the  Input Options  tab choose \"Fred Dropzone\" from the Input Type select list  If you want to see the rendered content from the Manager, change the value of the last \u201cHide Field from Manager:\u201d option to \u201cNo\u201d.",
            "title": "Multiple Dropzones"
        },
        {
            "location": "/templates/#fred-template-example-with-sidebar-dropzone",
            "text": "<html>\n<head>\n    <title>[[*pagetitle]]</title>\n\n</head>\n<body >\n    <section id=\"wrapper\">\n        <div id=\"main\" data-fred-dropzone=\"content\" data-fred-min-height=\"500px\">\n            [[*content]]\n        </div>\n        <aside id=\"sidebar\" data-fred-dropzone=\"sidebar\" data-fred-min-height=\"250px\">\n            [[*sidebar]]\n        </aside>\n    </section>\n</body>\n</html>",
            "title": "Fred Template Example with sidebar Dropzone"
        },
        {
            "location": "/blueprints/",
            "text": "Blueprints\n\n\nBlueprints are pre-designed content sections or even full page content templates. Blueprints include text and/or assets and one or more Elements. These can be used as starting points for structured content like landing pages, product pages, etc.\n\n\nYou can also use Blueprints as demo pages which theme users can use to start a site with complete layouts made up of any combination of content and Elements. \n\n\nBlueprints are organized into user-determined categories such as Headers, Landing Pages, Galleries, etc.\n\n\nCreating Blueprints\n\n\nWhen creating a Blueprint, it will generate a proxy screenshot image for you. However you may wish to manually create your own screenshot as the libary used to build screen captures, while very good, does not understand all CSS properties.\n\n\nComplete Blueprints\n\n\nComplete Blueprints are a copy of an entire page of content. You create these from the front-end when Fred is enabled. \n\n\nTo create a complete Blueprint, click the Blueprints icon in the Fred sidebar, then choose an existing category from the top or create a new category for your Blueprints.  \n\n\nPartial Blueprints\n\n\nPartial Blueprints are made from the Element bar when hovering/focusing an Element in the front-end. Click the Blueprint icon which matches the one in the sidebar to create a \n\n\nUsing Blueprints\n\n\nLike Elements, find the Blueprint you wish to use and drag-and-drop it into a Dropzone on a Fred-enabled page.",
            "title": "Blueprints"
        },
        {
            "location": "/blueprints/#blueprints",
            "text": "Blueprints are pre-designed content sections or even full page content templates. Blueprints include text and/or assets and one or more Elements. These can be used as starting points for structured content like landing pages, product pages, etc.  You can also use Blueprints as demo pages which theme users can use to start a site with complete layouts made up of any combination of content and Elements.   Blueprints are organized into user-determined categories such as Headers, Landing Pages, Galleries, etc.",
            "title": "Blueprints"
        },
        {
            "location": "/blueprints/#creating-blueprints",
            "text": "When creating a Blueprint, it will generate a proxy screenshot image for you. However you may wish to manually create your own screenshot as the libary used to build screen captures, while very good, does not understand all CSS properties.",
            "title": "Creating Blueprints"
        },
        {
            "location": "/blueprints/#complete-blueprints",
            "text": "Complete Blueprints are a copy of an entire page of content. You create these from the front-end when Fred is enabled.   To create a complete Blueprint, click the Blueprints icon in the Fred sidebar, then choose an existing category from the top or create a new category for your Blueprints.",
            "title": "Complete Blueprints"
        },
        {
            "location": "/blueprints/#partial-blueprints",
            "text": "Partial Blueprints are made from the Element bar when hovering/focusing an Element in the front-end. Click the Blueprint icon which matches the one in the sidebar to create a",
            "title": "Partial Blueprints"
        },
        {
            "location": "/blueprints/#using-blueprints",
            "text": "Like Elements, find the Blueprint you wish to use and drag-and-drop it into a Dropzone on a Fred-enabled page.",
            "title": "Using Blueprints"
        },
        {
            "location": "/develop/convert-to-fred/",
            "text": "todo\n @matdave",
            "title": "Convert to fred"
        },
        {
            "location": "/develop/",
            "text": "Developing for Fred\n\n\nFred gives theme builders and internal marketing departments of Enterprsies tremendous power to create robust tools for non-technical content creators.\n\n\nTODO\n @rthrash",
            "title": "Developing for Fred"
        },
        {
            "location": "/develop/#developing-for-fred",
            "text": "Fred gives theme builders and internal marketing departments of Enterprsies tremendous power to create robust tools for non-technical content creators.  TODO  @rthrash",
            "title": "Developing for Fred"
        },
        {
            "location": "/develop/acls/howto/",
            "text": "Permissions in Fred\n\n\nWhen installing Fred the first time, it adds a \nFred Admin\n policy to all contexts for the \nAdministrators\n User Group. This policy enables any member with a \nSuper User\n  Role full access to Fred both in the Manager and in all front-end Contexts. \n\n\nIt also creates a more-limited \nFred Editor\n policy intended for users that do not need to set up Fred. Setting up Fred involves creating new Elements, Option Sets, and other admin functions. \n\n\nLimiting Fred to Specific Contexts\n\n\nBy default, the \nFred Admin\n policy applies to all existing Contexts. If you do not need to manage all Contexts with Fred remove this Policy from the \nAdministrators\n User Group; if you create a new Context that needs to be managed by Fred add this policy to the \nAdministrators\n Group after creating the Context. \n\n\nTo enable Fred for members who are not \nAdministrators\n Group members, add a Fred Policy to their User Group and to the specific Contexts you wish to be managed by Fred. \n\n\nManager and Front-end Access\n\n\nWeb developers and theme creators use the Fred Extra in the Manager to configure Fred and create Themes. Once a site is set up, however, daily content creation and edits using Fred may not require Manager access. \n\n\nIf you wish for users to only work with Fred from the front-end, you need to take two steps:\n\n\n\n\nInstall the \nLogin Extra\n to add a front-end login for content authors and editors. \n\n\nAssign one of the Fred Policies to the \nweb\n or other Contexts. \n\n\n\n\nCreating Custom Fred Policies\n\n\nThe built-in Fred Policies may not be sufficient for all sites. Fortunately, creating custom Fred Policies is straightforward.\n\n\n\n\nIn the Manager, select the ACLs menu under the gear icon in the upper right.\n\n\nClick the Access Policies tab. \n\n\nClick the \nCreate Access Policy\n button, fill the policy name and select \nFred\n as the Policy Template. This Policy Template contains all the possible permissions you need to customize how you configure it for your users. \n\n\nWhen you save the policy, it appears in the table. Right-click it and select \nUpdate Policy\n from the contextual menu. \n\n\nEnable or disable the \npermissions\n by unchecking the ones you wish to restrict from your users.",
            "title": "Permissions in Fred"
        },
        {
            "location": "/develop/acls/howto/#permissions-in-fred",
            "text": "When installing Fred the first time, it adds a  Fred Admin  policy to all contexts for the  Administrators  User Group. This policy enables any member with a  Super User   Role full access to Fred both in the Manager and in all front-end Contexts.   It also creates a more-limited  Fred Editor  policy intended for users that do not need to set up Fred. Setting up Fred involves creating new Elements, Option Sets, and other admin functions.",
            "title": "Permissions in Fred"
        },
        {
            "location": "/develop/acls/howto/#limiting-fred-to-specific-contexts",
            "text": "By default, the  Fred Admin  policy applies to all existing Contexts. If you do not need to manage all Contexts with Fred remove this Policy from the  Administrators  User Group; if you create a new Context that needs to be managed by Fred add this policy to the  Administrators  Group after creating the Context.   To enable Fred for members who are not  Administrators  Group members, add a Fred Policy to their User Group and to the specific Contexts you wish to be managed by Fred.",
            "title": "Limiting Fred to Specific Contexts"
        },
        {
            "location": "/develop/acls/howto/#manager-and-front-end-access",
            "text": "Web developers and theme creators use the Fred Extra in the Manager to configure Fred and create Themes. Once a site is set up, however, daily content creation and edits using Fred may not require Manager access.   If you wish for users to only work with Fred from the front-end, you need to take two steps:   Install the  Login Extra  to add a front-end login for content authors and editors.   Assign one of the Fred Policies to the  web  or other Contexts.",
            "title": "Manager and Front-end Access"
        },
        {
            "location": "/develop/acls/howto/#creating-custom-fred-policies",
            "text": "The built-in Fred Policies may not be sufficient for all sites. Fortunately, creating custom Fred Policies is straightforward.   In the Manager, select the ACLs menu under the gear icon in the upper right.  Click the Access Policies tab.   Click the  Create Access Policy  button, fill the policy name and select  Fred  as the Policy Template. This Policy Template contains all the possible permissions you need to customize how you configure it for your users.   When you save the policy, it appears in the table. Right-click it and select  Update Policy  from the contextual menu.   Enable or disable the  permissions  by unchecking the ones you wish to restrict from your users.",
            "title": "Creating Custom Fred Policies"
        },
        {
            "location": "/develop/acls/permissions/",
            "text": "Permissions\n\n\nThe following sections list the permissions available for Fred. The subhead is the permission key used in code, followed by a brief description of where and what those permissions control Most of these permissions can be used both with the \nmgr\n context and front-end contexts like \nweb\n. However there are few that only apply to \nmgr\n or front-end contexts. \n\n\nFor example, if you apply the \nfred\n permission to the \nmgr\n Context, users will see the Fred Extra in the Manager. If you apply it to a front-end context, the Fred controls will apear when browsing the site from the front-end (if assigned to a page\u2019s Template). Applying the \nfred_settings\n permission to \nmgr\n context will do nothing as this permission is only used in front-end to be able to see the Settings tab in the sidebar menu.   \n\n\nGeneral Permissions\n\n\nfred\n\n\nView Fred (mgr) (web)\n\n\nfred_settings\n\n\nView the Settings menu in the sidebar (web)\n\n\nfred_settings_advanced\n\n\nView the Advanced Settings under the Settings menu (web)\n\n\nfred_settings_tvs\n\n\nView the TVs section under the Settings menu (web)\n\n\nfred_settings_tags\n\n\nView the Tags section under the Settings menu (web)\n\n\nfred_media_sources\n\n\nView Media Sources (mgr)\n\n\nElement Permissions\n\n\nfred_elements\n\n\nView Elements (mgr) (web)\n\n\nfred_element_save\n\n\nCreate/edit/duplicate Elements (mgr)\n\n\nfred_element_delete\n\n\nDelete Elements (mgr)\n\n\nfred_element_screenshot\n\n\nTake a screenshot to replace the current sidebar preview for Elements (web)\n\n\nfred_element_move\n\n\nDrag and drop Elements into drop zones (web)\n\n\nfred_element_rebuild\n\n\nView the Rebuild tab (mgr)\n\n\nElement Category Permissions\n\n\nfred_element_categories\n\n\nView Fred Element Categories (mgr)\n\n\nfred_element_category_save\n\n\nCreate/edit/duplicate Element (mgr) \n\n\nfred_element_category_delete\n\n\nDelete Element Categories (mgr)\n\n\nRTE Config Permissions\n\n\nfred_element_rtes\n\n\nView RTE configs (mgr)\n\n\nfred_element_rte_config_save\n\n\nCreate/edit/duplicate RTE configs (mgr)\n\n\nfred_element_rte_config_delete\n\n\nDelete RTE configs (mgr)\n\n\nOption Sets Permissions\n\n\nfred_element_option_sets\n\n\nView Option Sets (mgr)\n\n\nfred_element_option_sets_save\n\n\nCreate/edit/duplicate Option Sets (mgr)\n\n\nfred_element_option_sets_delete\n\n\nDelete Option Sets (mgr)\n\n\nBlueprints Permissions\n\n\nfred_blueprints\n\n\nView Blueprints (mgr) (web)\n\n\nfred_blueprints_save\n\n\nCreate/edit/duplicate Blueprints (mgr) (web)\n\n\nfred_blueprints_delete\n\n\nDelete Blueprints (mgr)\n\n\nfred_blueprints_create_public\n\n\nCreate public Blueprints (mgr) (web)\n\n\nBlueprint Category Permissions\n\n\nfred_blueprint_categories\n\n\nView Blueprint Categories (mgr)\n\n\nfred_blueprint_categories_save\n\n\nCreate/edit/duplicate Blueprint Categories (mgr) (web)\n\n\nfred_blueprint_categories_delete\n\n\nDelete Blueprint Categories (mgr)\n\n\nfred_blueprint_categories_create_public\n\n\nCreate Public Blueprint Categories (mgr) (web)\n\n\nTheme Permissions\n\n\nfred_themes\n\n\nView the Themes tab (mgr)\n\n\nfred_themes_save\n\n\nCreate/edit/duplicate Themes (mgr)\n\n\nfred_themes_delete\n\n\nDelete Themes (mgr)\n\n\nfred_themes_build\n\n\nBuild Themes (mgr)\n\n\nThemed Template Permissions\n\n\nfred_themed_templates\n\n\nView Theme/Template assignments (mgr)\n\n\nfred_themed_templates_save\n\n\nAssign/Update Fred Themes to MODX Templates (mgr)\n\n\nfred_themed_templates_delete\n\n\nUnassign Theme from MODX Templates (mgr)\n\n\nMODX Permissions\n\n\nnew_document\n\n\nCreate new Resources (mgr) (web)\n\n\nnew_document_in_root\n\n\nCreate Resources in the top-level of web root (mgr) (web)\n\n\nsave_document\n\n\nSave Resources (mgr) (web)\n\n\nview_unpublished\n\n\nView unpublished Resources (web)\n\n\nresource_duplicate\n\n\nDuplicate Resources (mgr) (web)\n\n\npublish_document\n\n\nPublish Resources (mgr) (web)\n\n\nunpublish_document\n\n\nUnpublish Resources (mgr) (web)\n\n\ndelete_document\n\n\nDelete Resources (mgr) (web)\n\n\nundelete_document\n\n\nUndelete Resources (mgr) (web)",
            "title": "Permissions"
        },
        {
            "location": "/develop/acls/permissions/#permissions",
            "text": "The following sections list the permissions available for Fred. The subhead is the permission key used in code, followed by a brief description of where and what those permissions control Most of these permissions can be used both with the  mgr  context and front-end contexts like  web . However there are few that only apply to  mgr  or front-end contexts.   For example, if you apply the  fred  permission to the  mgr  Context, users will see the Fred Extra in the Manager. If you apply it to a front-end context, the Fred controls will apear when browsing the site from the front-end (if assigned to a page\u2019s Template). Applying the  fred_settings  permission to  mgr  context will do nothing as this permission is only used in front-end to be able to see the Settings tab in the sidebar menu.",
            "title": "Permissions"
        },
        {
            "location": "/develop/acls/permissions/#general-permissions",
            "text": "",
            "title": "General Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred",
            "text": "View Fred (mgr) (web)",
            "title": "fred"
        },
        {
            "location": "/develop/acls/permissions/#fred_settings",
            "text": "View the Settings menu in the sidebar (web)",
            "title": "fred_settings"
        },
        {
            "location": "/develop/acls/permissions/#fred_settings_advanced",
            "text": "View the Advanced Settings under the Settings menu (web)",
            "title": "fred_settings_advanced"
        },
        {
            "location": "/develop/acls/permissions/#fred_settings_tvs",
            "text": "View the TVs section under the Settings menu (web)",
            "title": "fred_settings_tvs"
        },
        {
            "location": "/develop/acls/permissions/#fred_settings_tags",
            "text": "View the Tags section under the Settings menu (web)",
            "title": "fred_settings_tags"
        },
        {
            "location": "/develop/acls/permissions/#fred_media_sources",
            "text": "View Media Sources (mgr)",
            "title": "fred_media_sources"
        },
        {
            "location": "/develop/acls/permissions/#element-permissions",
            "text": "",
            "title": "Element Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_elements",
            "text": "View Elements (mgr) (web)",
            "title": "fred_elements"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_save",
            "text": "Create/edit/duplicate Elements (mgr)",
            "title": "fred_element_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_delete",
            "text": "Delete Elements (mgr)",
            "title": "fred_element_delete"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_screenshot",
            "text": "Take a screenshot to replace the current sidebar preview for Elements (web)",
            "title": "fred_element_screenshot"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_move",
            "text": "Drag and drop Elements into drop zones (web)",
            "title": "fred_element_move"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_rebuild",
            "text": "View the Rebuild tab (mgr)",
            "title": "fred_element_rebuild"
        },
        {
            "location": "/develop/acls/permissions/#element-category-permissions",
            "text": "",
            "title": "Element Category Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_categories",
            "text": "View Fred Element Categories (mgr)",
            "title": "fred_element_categories"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_category_save",
            "text": "Create/edit/duplicate Element (mgr)",
            "title": "fred_element_category_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_category_delete",
            "text": "Delete Element Categories (mgr)",
            "title": "fred_element_category_delete"
        },
        {
            "location": "/develop/acls/permissions/#rte-config-permissions",
            "text": "",
            "title": "RTE Config Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_rtes",
            "text": "View RTE configs (mgr)",
            "title": "fred_element_rtes"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_rte_config_save",
            "text": "Create/edit/duplicate RTE configs (mgr)",
            "title": "fred_element_rte_config_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_rte_config_delete",
            "text": "Delete RTE configs (mgr)",
            "title": "fred_element_rte_config_delete"
        },
        {
            "location": "/develop/acls/permissions/#option-sets-permissions",
            "text": "",
            "title": "Option Sets Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_option_sets",
            "text": "View Option Sets (mgr)",
            "title": "fred_element_option_sets"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_option_sets_save",
            "text": "Create/edit/duplicate Option Sets (mgr)",
            "title": "fred_element_option_sets_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_element_option_sets_delete",
            "text": "Delete Option Sets (mgr)",
            "title": "fred_element_option_sets_delete"
        },
        {
            "location": "/develop/acls/permissions/#blueprints-permissions",
            "text": "",
            "title": "Blueprints Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprints",
            "text": "View Blueprints (mgr) (web)",
            "title": "fred_blueprints"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprints_save",
            "text": "Create/edit/duplicate Blueprints (mgr) (web)",
            "title": "fred_blueprints_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprints_delete",
            "text": "Delete Blueprints (mgr)",
            "title": "fred_blueprints_delete"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprints_create_public",
            "text": "Create public Blueprints (mgr) (web)",
            "title": "fred_blueprints_create_public"
        },
        {
            "location": "/develop/acls/permissions/#blueprint-category-permissions",
            "text": "",
            "title": "Blueprint Category Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprint_categories",
            "text": "View Blueprint Categories (mgr)",
            "title": "fred_blueprint_categories"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprint_categories_save",
            "text": "Create/edit/duplicate Blueprint Categories (mgr) (web)",
            "title": "fred_blueprint_categories_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprint_categories_delete",
            "text": "Delete Blueprint Categories (mgr)",
            "title": "fred_blueprint_categories_delete"
        },
        {
            "location": "/develop/acls/permissions/#fred_blueprint_categories_create_public",
            "text": "Create Public Blueprint Categories (mgr) (web)",
            "title": "fred_blueprint_categories_create_public"
        },
        {
            "location": "/develop/acls/permissions/#theme-permissions",
            "text": "",
            "title": "Theme Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_themes",
            "text": "View the Themes tab (mgr)",
            "title": "fred_themes"
        },
        {
            "location": "/develop/acls/permissions/#fred_themes_save",
            "text": "Create/edit/duplicate Themes (mgr)",
            "title": "fred_themes_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_themes_delete",
            "text": "Delete Themes (mgr)",
            "title": "fred_themes_delete"
        },
        {
            "location": "/develop/acls/permissions/#fred_themes_build",
            "text": "Build Themes (mgr)",
            "title": "fred_themes_build"
        },
        {
            "location": "/develop/acls/permissions/#themed-template-permissions",
            "text": "",
            "title": "Themed Template Permissions"
        },
        {
            "location": "/develop/acls/permissions/#fred_themed_templates",
            "text": "View Theme/Template assignments (mgr)",
            "title": "fred_themed_templates"
        },
        {
            "location": "/develop/acls/permissions/#fred_themed_templates_save",
            "text": "Assign/Update Fred Themes to MODX Templates (mgr)",
            "title": "fred_themed_templates_save"
        },
        {
            "location": "/develop/acls/permissions/#fred_themed_templates_delete",
            "text": "Unassign Theme from MODX Templates (mgr)",
            "title": "fred_themed_templates_delete"
        },
        {
            "location": "/develop/acls/permissions/#modx-permissions",
            "text": "",
            "title": "MODX Permissions"
        },
        {
            "location": "/develop/acls/permissions/#new_document",
            "text": "Create new Resources (mgr) (web)",
            "title": "new_document"
        },
        {
            "location": "/develop/acls/permissions/#new_document_in_root",
            "text": "Create Resources in the top-level of web root (mgr) (web)",
            "title": "new_document_in_root"
        },
        {
            "location": "/develop/acls/permissions/#save_document",
            "text": "Save Resources (mgr) (web)",
            "title": "save_document"
        },
        {
            "location": "/develop/acls/permissions/#view_unpublished",
            "text": "View unpublished Resources (web)",
            "title": "view_unpublished"
        },
        {
            "location": "/develop/acls/permissions/#resource_duplicate",
            "text": "Duplicate Resources (mgr) (web)",
            "title": "resource_duplicate"
        },
        {
            "location": "/develop/acls/permissions/#publish_document",
            "text": "Publish Resources (mgr) (web)",
            "title": "publish_document"
        },
        {
            "location": "/develop/acls/permissions/#unpublish_document",
            "text": "Unpublish Resources (mgr) (web)",
            "title": "unpublish_document"
        },
        {
            "location": "/develop/acls/permissions/#delete_document",
            "text": "Delete Resources (mgr) (web)",
            "title": "delete_document"
        },
        {
            "location": "/develop/acls/permissions/#undelete_document",
            "text": "Undelete Resources (mgr) (web)",
            "title": "undelete_document"
        },
        {
            "location": "/develop/acls/policies/",
            "text": "Policies\n\n\nFred Admin\n\n\nThis Admin policy has all \npermissions\n enabled. Users are not limited in any way when using Fred. \n\n\nFred Editor\n\n\nA \nFred Editor\n user is able to view Fred and all page settings in the front-end, create and use Elements and Blueprints and create new pages. \n\n\nThe complete list of permissions for this Policy:\n\n\n\n\nfred\n\n\nfred_settings\n\n\nfred_settings_advanced\n\n\nfred_settings_tags\n\n\nfred_settings_tvs\n\n\nfred_elements\n\n\nfred_element_save\n\n\nfred_element_move\n\n\nfred_element_categories\n\n\nfred_element_category_save\n\n\nfred_blueprints\n\n\nfred_blueprints_save\n\n\nfred_blueprints_create_public\n\n\nfred_blueprint_categories\n\n\nfred_blueprint_categories_save\n\n\nfred_blueprint_categories_create_public\n\n\nfred_themed_templates\n\n\nnew_document\n\n\nsave_document\n\n\nresource_duplicate\n\n\nview_unpublished\n\n\ndelete_document",
            "title": "Policies"
        },
        {
            "location": "/develop/acls/policies/#policies",
            "text": "",
            "title": "Policies"
        },
        {
            "location": "/develop/acls/policies/#fred-admin",
            "text": "This Admin policy has all  permissions  enabled. Users are not limited in any way when using Fred.",
            "title": "Fred Admin"
        },
        {
            "location": "/develop/acls/policies/#fred-editor",
            "text": "A  Fred Editor  user is able to view Fred and all page settings in the front-end, create and use Elements and Blueprints and create new pages.   The complete list of permissions for this Policy:   fred  fred_settings  fred_settings_advanced  fred_settings_tags  fred_settings_tvs  fred_elements  fred_element_save  fred_element_move  fred_element_categories  fred_element_category_save  fred_blueprints  fred_blueprints_save  fred_blueprints_create_public  fred_blueprint_categories  fred_blueprint_categories_save  fred_blueprint_categories_create_public  fred_themed_templates  new_document  save_document  resource_duplicate  view_unpublished  delete_document",
            "title": "Fred Editor"
        },
        {
            "location": "/develop/cmp/blueprint_categories/",
            "text": "Blueprints Categories\n\n\nCategories are an organizational strucure for Fred to group items with similar usage. Examples could be:\n\n\n\n\nIntro Blocks\n\n\nGalleries\n\n\nLanding Pages\n\n\nCatalog Pages\n\n\nForm Pages\n\n\nEtc.\n\n\n\n\nPlease note that if you remove a category, all Blueprints attached to it will be removed also, potentially breaking your site.",
            "title": "Blueprints Categories"
        },
        {
            "location": "/develop/cmp/blueprint_categories/#blueprints-categories",
            "text": "Categories are an organizational strucure for Fred to group items with similar usage. Examples could be:   Intro Blocks  Galleries  Landing Pages  Catalog Pages  Form Pages  Etc.   Please note that if you remove a category, all Blueprints attached to it will be removed also, potentially breaking your site.",
            "title": "Blueprints Categories"
        },
        {
            "location": "/develop/cmp/blueprints/",
            "text": "Blueprints",
            "title": "Blueprints"
        },
        {
            "location": "/develop/cmp/blueprints/#blueprints",
            "text": "",
            "title": "Blueprints"
        },
        {
            "location": "/develop/cmp/element_categories/",
            "text": "Element Categories\n\n\nCategories are an organizational strucure for Fred to group items with similar usage. Examples Element categories could be:\n\n\n\n\nHeaders\n\n\nPage Separators\n\n\nIntro Blocks\n\n\nGalleries\n\n\nBody copy\n\n\nQuotes\n\n\nForms\n\n\nEtc.\n\n\n\n\nUnder the Categories leftside tab on main Elements tab you can manage all Categories for Elements in Fred.\n\n\n\n\nPlease note that if you remove a category, all Elements attached to it will be removed as well, which may break your site.",
            "title": "Element Categories"
        },
        {
            "location": "/develop/cmp/element_categories/#element-categories",
            "text": "Categories are an organizational strucure for Fred to group items with similar usage. Examples Element categories could be:   Headers  Page Separators  Intro Blocks  Galleries  Body copy  Quotes  Forms  Etc.   Under the Categories leftside tab on main Elements tab you can manage all Categories for Elements in Fred.   Please note that if you remove a category, all Elements attached to it will be removed as well, which may break your site.",
            "title": "Element Categories"
        },
        {
            "location": "/develop/cmp/elements/",
            "text": "Elements\n\n\nElements are the fundamental starting point for \n\n\nCreating Element\n\n\nThe following are the properties for each Element:\n\n\n\n\nName\n - Required. What you wish to call the Element.\n\n\nDescription\n - Optional. A brief description for the Element.\n\n\nImage\n - Required. If you do not specify an image, a default gray box with the Element name will be created for you. Images are used as the sources for dragging and dropping Elements into your Layouts. \n\n\nCategory\n - Required. Which category to place this Element under.\n\n\nRank\n - Optional. The order you wish this Element to show in its category.\n\n\nMarkup\n - Optional. HTML + Twig markup for the element, including \nFred-specific attributes\n which allow you to control things like save targets, visibility when creating or viewing content, etc.\n\n\nOption Set\n - Optional. Complete Option Set can be selected here\n\n\nOptions Override\n - Optional. Override selected Option Set, or define one time options for this element\n\n\n\n\n\n\n\n\nElement images\n\n\nElement images are thumbnail previews used to drag-and-drop onto pages. You can create your own images/previews/screengrabs for Elements, or Fred can create ones for you in one of two ways:\n\n\n\n\na gray box with the Element\u2019s name centered in the gray box (this is the default unless you provide an image)\n\n\nafter an Element is used, and if you have the \"Take Screenshots\" permission, clicking the camera icon above the Element when focused.\n\n\n\n\nNote:\n the library used to take screenshots is very good, but it doesn't understand some CSS properties and may not render the screenshots optimially for your use case. For best results make sure that manual Element screenshots are 500px wide.\n\n\nUpdating Elements\n\n\nElements are like master templates which can be updated at any time. When an Element's markup or option set is updated, all places in a site should update to reflect these changes. \n\n\nTo see the updated results, either resave the page, or use the \"Rebuild\" tab in the Fred 3PC.",
            "title": "Elements"
        },
        {
            "location": "/develop/cmp/elements/#elements",
            "text": "Elements are the fundamental starting point for",
            "title": "Elements"
        },
        {
            "location": "/develop/cmp/elements/#creating-element",
            "text": "The following are the properties for each Element:   Name  - Required. What you wish to call the Element.  Description  - Optional. A brief description for the Element.  Image  - Required. If you do not specify an image, a default gray box with the Element name will be created for you. Images are used as the sources for dragging and dropping Elements into your Layouts.   Category  - Required. Which category to place this Element under.  Rank  - Optional. The order you wish this Element to show in its category.  Markup  - Optional. HTML + Twig markup for the element, including  Fred-specific attributes  which allow you to control things like save targets, visibility when creating or viewing content, etc.  Option Set  - Optional. Complete Option Set can be selected here  Options Override  - Optional. Override selected Option Set, or define one time options for this element",
            "title": "Creating Element"
        },
        {
            "location": "/develop/cmp/elements/#element-images",
            "text": "Element images are thumbnail previews used to drag-and-drop onto pages. You can create your own images/previews/screengrabs for Elements, or Fred can create ones for you in one of two ways:   a gray box with the Element\u2019s name centered in the gray box (this is the default unless you provide an image)  after an Element is used, and if you have the \"Take Screenshots\" permission, clicking the camera icon above the Element when focused.   Note:  the library used to take screenshots is very good, but it doesn't understand some CSS properties and may not render the screenshots optimially for your use case. For best results make sure that manual Element screenshots are 500px wide.",
            "title": "Element images"
        },
        {
            "location": "/develop/cmp/elements/#updating-elements",
            "text": "Elements are like master templates which can be updated at any time. When an Element's markup or option set is updated, all places in a site should update to reflect these changes.   To see the updated results, either resave the page, or use the \"Rebuild\" tab in the Fred 3PC.",
            "title": "Updating Elements"
        },
        {
            "location": "/develop/cmp/media_sources/",
            "text": "",
            "title": "Media sources"
        },
        {
            "location": "/develop/cmp/option_sets/",
            "text": "Option Sets\n\n\nOption Sets\n allow you to create common configurations and frequently used sub-configs (e.g., color swatch pickers or a list of fonts) for use across multiple Elements.\n\n\n\n\nCreating Option Set\n\n\nThe following are the avaialble Option Set properties:\n\n\n\n\nName\n - Required, has to be unique\n\n\nDescription\n - Optional\n\n\nComplete\n - Yes/No flag, if set to Yes, the Option Set will appear in select box when creating/updating Element. Setting it to No is usefull for partial Option Sets for import only purpose.\n\n\nData\n - JSON with \nElement options",
            "title": "Option Sets"
        },
        {
            "location": "/develop/cmp/option_sets/#option-sets",
            "text": "Option Sets  allow you to create common configurations and frequently used sub-configs (e.g., color swatch pickers or a list of fonts) for use across multiple Elements.",
            "title": "Option Sets"
        },
        {
            "location": "/develop/cmp/option_sets/#creating-option-set",
            "text": "The following are the avaialble Option Set properties:   Name  - Required, has to be unique  Description  - Optional  Complete  - Yes/No flag, if set to Yes, the Option Set will appear in select box when creating/updating Element. Setting it to No is usefull for partial Option Sets for import only purpose.  Data  - JSON with  Element options",
            "title": "Creating Option Set"
        },
        {
            "location": "/develop/cmp/rebuild/",
            "text": "Rebuild",
            "title": "Rebuild"
        },
        {
            "location": "/develop/cmp/rebuild/#rebuild",
            "text": "",
            "title": "Rebuild"
        },
        {
            "location": "/develop/cmp/rte_configs/",
            "text": "Rich Text Editor (RTE) Configurations\n\n\nUnder the RTE Configs tab you can manage all configuration sets for any installed RTEs.\n\n\n\n\nRTE configs must have a unique name, which is used in \ndata-fred-rte-config\n attribute to determin which RTE to use, if any.\n\n\nMake sure RTE configs are valid JSON; you can use \nJSON Lint\n as an external service or the \nACE editor\n MODX Extra which shows invalid JSON in the line-number columns as a white X in a red box.\n\n\nDefault Configs\n\n\nIf you create a config with a same name as your RTE, for example \nTinyMCE\n, this config will be used as a default one (instead of the one TinyMCE is shipped with).\n\n\nOverriding Default Configs\n\n\nEach option set can specify which RTE to use for the entire Element. In addition, a \ndata-fred-rte-config\n attribute on an HTML element with a \ncontent-editable=\"true\"\n attribue set will override both the Default and Option set specified settings.",
            "title": "Rich Text Editor (RTE) Configurations"
        },
        {
            "location": "/develop/cmp/rte_configs/#rich-text-editor-rte-configurations",
            "text": "Under the RTE Configs tab you can manage all configuration sets for any installed RTEs.   RTE configs must have a unique name, which is used in  data-fred-rte-config  attribute to determin which RTE to use, if any.  Make sure RTE configs are valid JSON; you can use  JSON Lint  as an external service or the  ACE editor  MODX Extra which shows invalid JSON in the line-number columns as a white X in a red box.",
            "title": "Rich Text Editor (RTE) Configurations"
        },
        {
            "location": "/develop/cmp/rte_configs/#default-configs",
            "text": "If you create a config with a same name as your RTE, for example  TinyMCE , this config will be used as a default one (instead of the one TinyMCE is shipped with).",
            "title": "Default Configs"
        },
        {
            "location": "/develop/cmp/rte_configs/#overriding-default-configs",
            "text": "Each option set can specify which RTE to use for the entire Element. In addition, a  data-fred-rte-config  attribute on an HTML element with a  content-editable=\"true\"  attribue set will override both the Default and Option set specified settings.",
            "title": "Overriding Default Configs"
        },
        {
            "location": "/develop/cmp/themed_templates/",
            "text": "Themed Tempaltes\n\n\nFred works by assigning Templates to Fred themes. If a page in a MODX site uses a template which is assigned to a Fred Theme, it will show Fred controls when working from the front-end and logged into the MODX Manager.\n\n\nA MODX Template can only be assigned to a single Fred Theme.",
            "title": "Themed Tempaltes"
        },
        {
            "location": "/develop/cmp/themed_templates/#themed-tempaltes",
            "text": "Fred works by assigning Templates to Fred themes. If a page in a MODX site uses a template which is assigned to a Fred Theme, it will show Fred controls when working from the front-end and logged into the MODX Manager.  A MODX Template can only be assigned to a single Fred Theme.",
            "title": "Themed Tempaltes"
        },
        {
            "location": "/develop/cmp/themes/",
            "text": "About Fred Themes\n\n\nWhile most users will typically only have a single theme, you can have many installed in a site. Themes include all the things needed to create a site \nexcept\n example resources/content (caveat, see Blueprints below). \n\n\nBeing able to have multiple Themes allows Theme Builders to create and release a variety themes that share common options (Option sets) across Elements.\n\n\nWhat makes up a Theme\n\n\nThemes are made of of multple things:\n\n\n\n\nElements\n\n\nBlueprints\n\n\nMODX Templates and any TVs assigned to them\n\n\nCategories\n\n\nExtras\n\n\nAssets\n\n\nLicense, Changelog and Readme files\n\n\n\n\nWhen you create a Theme, Fred will automatically create a directory named for the theme in \nassets/themes/{{theme-name}}\n. Use this to store all your theme-specific assets like images, css, fonts and javascript. \n\n\nElements\n\n\nA Theme Builder will automatically include all Element Categories attached to the Theme with all their \nElements\n. All \nOption Sets\n and \nRTE Configs\n attached to the Theme will be also included.\n\n\nBlueprints\n\n\nA Theme Builder will automatically include \npublic\n Blueprint Categories attached to the THeme with all their \npublic\n \nBlueprints\n. \n\n\nTemplates and TVs\n\n\nA Theme Builder will include all MODX Templates assigned to the Theme. Any TVs assigned to those MODX Templates will also be included.\n\n\nCategories\n\n\nA User can select any root MODX Category to be included with the Theme. The Theme Builder will then include all child categories, snippets, chunks and plugins assigned to the root or child category.\n\n\nExtras\n\n\nExtras are MODX packages required for your theme to be fully functional. User will need to install all of the listed extras, before he can proceed with installing your Theme. \nFred\n itself will always be a dependency and is included by default.\n\n\nAssets\n\n\nTheme-specific assets like CSS/SASS/SCSS, images, JS and other similar files are packed into each theme in the \nassets/theme/{{your-theme-name}}\n directory.\n\n\nLicense, Changelog and Readme Files\n\n\nThese files show when you are installing the Extra from the MODX Package Manager.\n\n\nBuild\n\n\nThe Fred 3PC allows you share your themes with colleagues or to submit it to the \nMODX Extras\n repository:\n\n\n\n\nClick on the \"Themes\" tab.\n\n\nFind the Theme you'd like to share/publish.\n\n\nRight-click on its name and choose the Build theme option.\n\n\nFill in the details and choose one of the two export options at the bottom. A built theme will be saved to your \ncore/packages/\n directory as \n{{theme-name}}.transport.zip\n file that you can distribute.",
            "title": "About Fred Themes"
        },
        {
            "location": "/develop/cmp/themes/#about-fred-themes",
            "text": "While most users will typically only have a single theme, you can have many installed in a site. Themes include all the things needed to create a site  except  example resources/content (caveat, see Blueprints below).   Being able to have multiple Themes allows Theme Builders to create and release a variety themes that share common options (Option sets) across Elements.",
            "title": "About Fred Themes"
        },
        {
            "location": "/develop/cmp/themes/#what-makes-up-a-theme",
            "text": "Themes are made of of multple things:   Elements  Blueprints  MODX Templates and any TVs assigned to them  Categories  Extras  Assets  License, Changelog and Readme files   When you create a Theme, Fred will automatically create a directory named for the theme in  assets/themes/{{theme-name}} . Use this to store all your theme-specific assets like images, css, fonts and javascript.",
            "title": "What makes up a Theme"
        },
        {
            "location": "/develop/cmp/themes/#elements",
            "text": "A Theme Builder will automatically include all Element Categories attached to the Theme with all their  Elements . All  Option Sets  and  RTE Configs  attached to the Theme will be also included.",
            "title": "Elements"
        },
        {
            "location": "/develop/cmp/themes/#blueprints",
            "text": "A Theme Builder will automatically include  public  Blueprint Categories attached to the THeme with all their  public   Blueprints .",
            "title": "Blueprints"
        },
        {
            "location": "/develop/cmp/themes/#templates-and-tvs",
            "text": "A Theme Builder will include all MODX Templates assigned to the Theme. Any TVs assigned to those MODX Templates will also be included.",
            "title": "Templates and TVs"
        },
        {
            "location": "/develop/cmp/themes/#categories",
            "text": "A User can select any root MODX Category to be included with the Theme. The Theme Builder will then include all child categories, snippets, chunks and plugins assigned to the root or child category.",
            "title": "Categories"
        },
        {
            "location": "/develop/cmp/themes/#extras",
            "text": "Extras are MODX packages required for your theme to be fully functional. User will need to install all of the listed extras, before he can proceed with installing your Theme.  Fred  itself will always be a dependency and is included by default.",
            "title": "Extras"
        },
        {
            "location": "/develop/cmp/themes/#assets",
            "text": "Theme-specific assets like CSS/SASS/SCSS, images, JS and other similar files are packed into each theme in the  assets/theme/{{your-theme-name}}  directory.",
            "title": "Assets"
        },
        {
            "location": "/develop/cmp/themes/#license-changelog-and-readme-files",
            "text": "These files show when you are installing the Extra from the MODX Package Manager.",
            "title": "License, Changelog and Readme Files"
        },
        {
            "location": "/develop/cmp/themes/#build",
            "text": "The Fred 3PC allows you share your themes with colleagues or to submit it to the  MODX Extras  repository:   Click on the \"Themes\" tab.  Find the Theme you'd like to share/publish.  Right-click on its name and choose the Build theme option.  Fill in the details and choose one of the two export options at the bottom. A built theme will be saved to your  core/packages/  directory as  {{theme-name}}.transport.zip  file that you can distribute.",
            "title": "Build"
        },
        {
            "location": "/develop/events/",
            "text": "FredElementDrop\n\n\nThis event will trigger when any element is dropped to a dropzone. You can access fredEl from the \nevent.detail.fredEl\n object.\n\n\nFredElementSettingChange\n\n\nThis event will trigger when element setting on any element is changed. You can access fredEl from the \nevent.detail.fredEl\n object.",
            "title": "Home"
        },
        {
            "location": "/develop/events/#fredelementdrop",
            "text": "This event will trigger when any element is dropped to a dropzone. You can access fredEl from the  event.detail.fredEl  object.",
            "title": "FredElementDrop"
        },
        {
            "location": "/develop/events/#fredelementsettingchange",
            "text": "This event will trigger when element setting on any element is changed. You can access fredEl from the  event.detail.fredEl  object.",
            "title": "FredElementSettingChange"
        },
        {
            "location": "/develop/media_sources/",
            "text": "Media Sources can either be assigned globally via a setting in the Media Source itself, or in an Element's settings by referencing the Media Source Name(s). On install two new settings are added to each Media Source. If you'll want to access Media Sources from Fred, you will need to manually add these settings. NOTE: Fred does not currently check a specific user's Media Source permissions, and only reviews the following permissions.\n\n\nMedia Source Settings\n\n\nfred\n\n\nA Yes/No setting that defines if the Media Source is globally available to Elements rendered in Fred. \n(defaults to no)\n\n\nfredReadOnly\n\n\nA Yes/No setting that locks a Media Source from being written to. \n(defaults to no)\n\n\nElement Settings\n\n\nmediaSource\n\n\nID of the Media Source to use for Finder. Multiple IDs can be passed separated by comma \n,\n.\n\n\nimageMediaSource\n\n\nID of the Media Source to use for Image fields. Multiple IDs can be passed separated by comma \n,\n. This option overrides \nmediaSource\n.",
            "title": "Home"
        },
        {
            "location": "/develop/media_sources/#media-source-settings",
            "text": "",
            "title": "Media Source Settings"
        },
        {
            "location": "/develop/media_sources/#fred",
            "text": "A Yes/No setting that defines if the Media Source is globally available to Elements rendered in Fred.  (defaults to no)",
            "title": "fred"
        },
        {
            "location": "/develop/media_sources/#fredreadonly",
            "text": "A Yes/No setting that locks a Media Source from being written to.  (defaults to no)",
            "title": "fredReadOnly"
        },
        {
            "location": "/develop/media_sources/#element-settings",
            "text": "",
            "title": "Element Settings"
        },
        {
            "location": "/develop/media_sources/#mediasource",
            "text": "ID of the Media Source to use for Finder. Multiple IDs can be passed separated by comma  , .",
            "title": "mediaSource"
        },
        {
            "location": "/develop/media_sources/#imagemediasource",
            "text": "ID of the Media Source to use for Image fields. Multiple IDs can be passed separated by comma  , . This option overrides  mediaSource .",
            "title": "imageMediaSource"
        },
        {
            "location": "/develop/option_sets/",
            "text": "Option Sets\n\n\nOption Sets allow you to create common configurations and frequently used sub-configs (e.g., set of settings, use of media sources, remote render) for use across multiple Elements.\n\n\nComplete\n\n\nEach Option Set has a \ncomplete\n flag. If this flag is set to \nYes\n the Option Set can be attached to an \nElement\n.\n\n\nOption Sets with \nNo\n in this flag are meant to be used for including to other Option Sets. You can define repeatable list of settings or specific options that are going to repeat across multiple Option Sets.\n\n\nAvailable Options\n\n\nremote\n\n\nIf set to \ntrue\n XHR request will be fired to render the Element through both Twig and MODX parsers. This means you can have dynamic content that references other pages within a Fred page using MODX Snippets.\n\n\nmediaSource\n\n\nName of the Media Source to use for Finder. Multiple Names can be passed separated by comma \n,\n.\n\n\nimageMediaSource\n\n\nName of the Media Source to use for Image fields. Multiple Names can be passed separated by comma \n,\n. This option overrides \nmediaSource\n.\n\n\nsettings\n\n\nAn array of setting objects and group objects for the Fred Element. Settings can also contain a special import object, to import another option set.\n\n\nAvailable group properties\n\n\n\n\ngroup - Name of a group of related sub-settings that open when clicked in a secondary panel. The value of the group property will be used as the label for the group\n\n\nsettings - An array of setting objects\n\n\n\n\nAvailable setting properties\n\n\n\n\nname - Name of the setting, can be used as a Twig variable\n\n\nlabel - Setting's Label, displayed in the Element Settings panel\n\n\ntype - Type of the setting\n\n\nvalue - Default value\n\n\n\n\nAvailable types\n\n\n\n\ntext \n\n\ninput type=\"text\"\n\n\nany text value\n\n\n\n\n\n\nselect\n\n\nSingle select value\n\n\nType specific properties:\n\n\noptions - An object of \nvalue:label\n properties\n\n\n\n\n\n\n\n\n\n\n\n\ntoggle \n\n\n\n\ntrue/false checkbox\n\n\nreturns logical \ntrue\n or \nfalse\n\n\n\n\n\n\n\n\ncolorswatch\n\n\n\n\nVisual color picker, from predefined values\n\n\nType specific properties:\n\n\noptions \n\n\nAn array of colors; Example: \n[\"lightcoral\", \"red\", \"black\"]\n\n\nColor can be either a \nstring\n or an \nobject\n with following properties:\n\n\nvalue - the value passed to Twig for the color, which can be anything\n\n\ncolor - the displayed color for the swatch\n\n\nlabel - an arbitrary label for the swatch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncolorpicker\n\n\n\n\nColor picker\n\n\nType specific properties:\n\n\nshowAlpha - boolean to show alpha slider; Default: \ntrue\n\n\noptions - An array of colors; Example: \n[\"lightcoral\", \"red\", \"black\"]\n\n\n\n\n\n\n\n\n\n\nslider\n\n\nSlider input for numbers\n\n\nType specific properties:\n\n\nmin - \nREQURED\n; Minimum value of the slider\n\n\nmax - \nREQURED\n; Maximum value of the slider\n\n\ntooltipDecimals: Number of decimals to show in slider's tooltip; Default: 0\n\n\nstep: Number to increment slider's value; Default: 1\n\n\n\n\n\n\n\n\n\n\npage\n\n\nMODX Page select\n\n\nValue is returned as an object in format: \n{\"id\": 1, \"url\": \"fred.html\"}\n\n\nRefrencing ID or URL alone is done through the dot syntax: \n{{ page-name-example.id}}\n\n\n\n\n\n\nType specific properties:\n\n\nclearButton - If set to \ntrue\n button to clear select will appear\n\n\nparents - If set, only resource from these parents (including parents itself) will show; Value can be string with a comma as a separator or an array\n\n\nresources - If set, only resource with specified IDs will show; Value can be string with a comma as a separator or an array\n\n\ndepth - Depth to look for children for specified \nparents\n; Default: 1\n\n\n\n\n\n\n\n\n\n\nimage\n\n\nImage select\n\n\nType specific properties:\n\n\nshowPreview - If set to \nfalse\n preview won't appear under the text input\n\n\nmediaSource - Name of the Media Source to use; Overrides \nimageMediaSource\n global setting.  \n\n\n\n\n\n\n\n\n\n\ntagger\n\n\nSelect for Tagger tags\n\n\nType specific properties:\n\n\nautoTag - true/false to show/hide the auto tag\n\n\nhideInput - true/false to show/hide the input\n\n\ngroup - ID of the Tagger group to use\n\n\nlimit - Limit of tags that can be selected\n\n\n\n\n\n\n\n\n\n\n\n\nExample\n\n\n{\n    \"settings\": [\n        {\n            \"name\": \"panel_class\",\n            \"label\": \"Panel Class\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        },\n        {\n            \"group\": \"CTA\",\n            \"settings\": [\n                {\n                    \"name\": \"cta_class\",\n                    \"label\": \"CTA Class\",\n                    \"type\": \"select\",\n                    \"options\": {\n                        \"danger\": \"Red CTA\",\n                        \"info\": \"Blue CTA\",\n                        \"default\": \"Default CTA\"\n                    },\n                    \"value\": \"default\"\n                },\n                {\n                    \"name\": \"show_cta\",\n                    \"label\": \"Show CTA\",\n                    \"type\": \"toggle\",\n                    \"value\": false\n                },\n                {\n                    \"name\": \"color\",\n                    \"label\": \"Text Color\",\n                    \"type\": \"colorswatch\",\n                    \"value\": \"black\",\n                    \"options\": [{\"value\":\"primary\", \"color\":\"blue\",\"label\":\"Primary\"}, \"lightcoral\", \"black\", \"rgba(0,255,0,.5)\"]\n                },\n                {\n                    \"name\": \"bg_color\",\n                    \"label\": \"Background COlor\",\n                    \"type\": \"colorpicker\",\n                    \"value\": \"white\",\n                    \"showAlpha\": true,\n                    \"options\": [\"lightcoral\", \"black\", \"white\"]\n                },\n                {\n                    \"name\": \"page\",\n                    \"label\": \"Page\",\n                    \"type\": \"page\",\n                    \"value\": {\"id\":1, \"url\": \"[[~1]]\"}\n                }\n            ]\n        }\n    ]\n}\n\n\n\n\nImport\n\n\nImporting another Option Set is done with a special object with \nfred-import\n key. \n\n\n\n\nOnly not complete Option Sets can be imported\n\n\nImport only works for settings\n\n\n\n\nFull import\n\n\nComplete Option Set\n\n\n{\n    \"settings\": { \n      \"fred-import\": \"all_settings\"\n    }\n\n}\n\n\n\n\nAll Settings Option Set\n\n\n[\n    {\n        \"name\": \"cta_class\",\n        \"label\": \"CTA Class\",\n        \"type\": \"select\",\n        \"options\": {\n            \"danger\": \"Red CTA\",\n            \"info\": \"Blue CTA\",\n            \"default\": \"Default CTA\"\n        },\n        \"value\": \"default\"\n    },\n    {\n        \"name\": \"show_cta\",\n        \"label\": \"Show CTA\",\n        \"type\": \"toggle\",\n        \"value\": false\n    }\n\n]\n\n\n\n\nPartial import\n\n\nComplete Option Set\n\n\n{\n    \"settings\": [\n        {\n            \"name\": \"panel_class\",\n            \"label\": \"Panel Class\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        },\n        { \n            \"fred-import\": \"cta\"\n        },\n        { \n             \"fred-import\": \"text_color\"\n        }\n    ]\n\n}\n\n\n\n\nCTA Option Set\n\n\n{\n    \"group\": \"CTA\",\n    \"settings\": [\n        {\n            \"name\": \"cta_class\",\n            \"label\": \"CTA Class\",\n            \"type\": \"select\",\n            \"options\": {\n                \"danger\": \"Red CTA\",\n                \"info\": \"Blue CTA\",\n                \"default\": \"Default CTA\"\n            },\n            \"value\": \"default\"\n        },\n        {\n            \"name\": \"show_cta\",\n            \"label\": \"Show CTA\",\n            \"type\": \"toggle\",\n            \"value\": false\n        }\n    ]\n}\n\n\n\n\nText Color Option Set\n\n\n{\n    \"name\": \"color\",\n    \"label\": \"Text Color\",\n    \"type\": \"colorswatch\",\n    \"value\": \"black\",\n    \"options\": [{\"value\":\"primary\", \"color\":\"blue\",\"label\":\"Primary\"}, \"lightcoral\", \"black\", \"rgba(0,255,0,.5)\"]\n}",
            "title": "Option Sets"
        },
        {
            "location": "/develop/option_sets/#option-sets",
            "text": "Option Sets allow you to create common configurations and frequently used sub-configs (e.g., set of settings, use of media sources, remote render) for use across multiple Elements.",
            "title": "Option Sets"
        },
        {
            "location": "/develop/option_sets/#complete",
            "text": "Each Option Set has a  complete  flag. If this flag is set to  Yes  the Option Set can be attached to an  Element .  Option Sets with  No  in this flag are meant to be used for including to other Option Sets. You can define repeatable list of settings or specific options that are going to repeat across multiple Option Sets.",
            "title": "Complete"
        },
        {
            "location": "/develop/option_sets/#available-options",
            "text": "",
            "title": "Available Options"
        },
        {
            "location": "/develop/option_sets/#remote",
            "text": "If set to  true  XHR request will be fired to render the Element through both Twig and MODX parsers. This means you can have dynamic content that references other pages within a Fred page using MODX Snippets.",
            "title": "remote"
        },
        {
            "location": "/develop/option_sets/#mediasource",
            "text": "Name of the Media Source to use for Finder. Multiple Names can be passed separated by comma  , .",
            "title": "mediaSource"
        },
        {
            "location": "/develop/option_sets/#imagemediasource",
            "text": "Name of the Media Source to use for Image fields. Multiple Names can be passed separated by comma  , . This option overrides  mediaSource .",
            "title": "imageMediaSource"
        },
        {
            "location": "/develop/option_sets/#settings",
            "text": "An array of setting objects and group objects for the Fred Element. Settings can also contain a special import object, to import another option set.",
            "title": "settings"
        },
        {
            "location": "/develop/option_sets/#available-group-properties",
            "text": "group - Name of a group of related sub-settings that open when clicked in a secondary panel. The value of the group property will be used as the label for the group  settings - An array of setting objects",
            "title": "Available group properties"
        },
        {
            "location": "/develop/option_sets/#available-setting-properties",
            "text": "name - Name of the setting, can be used as a Twig variable  label - Setting's Label, displayed in the Element Settings panel  type - Type of the setting  value - Default value",
            "title": "Available setting properties"
        },
        {
            "location": "/develop/option_sets/#available-types",
            "text": "text   input type=\"text\"  any text value    select  Single select value  Type specific properties:  options - An object of  value:label  properties       toggle    true/false checkbox  returns logical  true  or  false     colorswatch   Visual color picker, from predefined values  Type specific properties:  options   An array of colors; Example:  [\"lightcoral\", \"red\", \"black\"]  Color can be either a  string  or an  object  with following properties:  value - the value passed to Twig for the color, which can be anything  color - the displayed color for the swatch  label - an arbitrary label for the swatch           colorpicker   Color picker  Type specific properties:  showAlpha - boolean to show alpha slider; Default:  true  options - An array of colors; Example:  [\"lightcoral\", \"red\", \"black\"]      slider  Slider input for numbers  Type specific properties:  min -  REQURED ; Minimum value of the slider  max -  REQURED ; Maximum value of the slider  tooltipDecimals: Number of decimals to show in slider's tooltip; Default: 0  step: Number to increment slider's value; Default: 1      page  MODX Page select  Value is returned as an object in format:  {\"id\": 1, \"url\": \"fred.html\"}  Refrencing ID or URL alone is done through the dot syntax:  {{ page-name-example.id}}    Type specific properties:  clearButton - If set to  true  button to clear select will appear  parents - If set, only resource from these parents (including parents itself) will show; Value can be string with a comma as a separator or an array  resources - If set, only resource with specified IDs will show; Value can be string with a comma as a separator or an array  depth - Depth to look for children for specified  parents ; Default: 1      image  Image select  Type specific properties:  showPreview - If set to  false  preview won't appear under the text input  mediaSource - Name of the Media Source to use; Overrides  imageMediaSource  global setting.        tagger  Select for Tagger tags  Type specific properties:  autoTag - true/false to show/hide the auto tag  hideInput - true/false to show/hide the input  group - ID of the Tagger group to use  limit - Limit of tags that can be selected",
            "title": "Available types"
        },
        {
            "location": "/develop/option_sets/#example",
            "text": "{\n    \"settings\": [\n        {\n            \"name\": \"panel_class\",\n            \"label\": \"Panel Class\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        },\n        {\n            \"group\": \"CTA\",\n            \"settings\": [\n                {\n                    \"name\": \"cta_class\",\n                    \"label\": \"CTA Class\",\n                    \"type\": \"select\",\n                    \"options\": {\n                        \"danger\": \"Red CTA\",\n                        \"info\": \"Blue CTA\",\n                        \"default\": \"Default CTA\"\n                    },\n                    \"value\": \"default\"\n                },\n                {\n                    \"name\": \"show_cta\",\n                    \"label\": \"Show CTA\",\n                    \"type\": \"toggle\",\n                    \"value\": false\n                },\n                {\n                    \"name\": \"color\",\n                    \"label\": \"Text Color\",\n                    \"type\": \"colorswatch\",\n                    \"value\": \"black\",\n                    \"options\": [{\"value\":\"primary\", \"color\":\"blue\",\"label\":\"Primary\"}, \"lightcoral\", \"black\", \"rgba(0,255,0,.5)\"]\n                },\n                {\n                    \"name\": \"bg_color\",\n                    \"label\": \"Background COlor\",\n                    \"type\": \"colorpicker\",\n                    \"value\": \"white\",\n                    \"showAlpha\": true,\n                    \"options\": [\"lightcoral\", \"black\", \"white\"]\n                },\n                {\n                    \"name\": \"page\",\n                    \"label\": \"Page\",\n                    \"type\": \"page\",\n                    \"value\": {\"id\":1, \"url\": \"[[~1]]\"}\n                }\n            ]\n        }\n    ]\n}",
            "title": "Example"
        },
        {
            "location": "/develop/option_sets/#import",
            "text": "Importing another Option Set is done with a special object with  fred-import  key.    Only not complete Option Sets can be imported  Import only works for settings",
            "title": "Import"
        },
        {
            "location": "/develop/option_sets/#full-import",
            "text": "",
            "title": "Full import"
        },
        {
            "location": "/develop/option_sets/#complete-option-set",
            "text": "{\n    \"settings\": { \n      \"fred-import\": \"all_settings\"\n    }\n\n}",
            "title": "Complete Option Set"
        },
        {
            "location": "/develop/option_sets/#all-settings-option-set",
            "text": "[\n    {\n        \"name\": \"cta_class\",\n        \"label\": \"CTA Class\",\n        \"type\": \"select\",\n        \"options\": {\n            \"danger\": \"Red CTA\",\n            \"info\": \"Blue CTA\",\n            \"default\": \"Default CTA\"\n        },\n        \"value\": \"default\"\n    },\n    {\n        \"name\": \"show_cta\",\n        \"label\": \"Show CTA\",\n        \"type\": \"toggle\",\n        \"value\": false\n    }\n\n]",
            "title": "All Settings Option Set"
        },
        {
            "location": "/develop/option_sets/#partial-import",
            "text": "",
            "title": "Partial import"
        },
        {
            "location": "/develop/option_sets/#complete-option-set_1",
            "text": "{\n    \"settings\": [\n        {\n            \"name\": \"panel_class\",\n            \"label\": \"Panel Class\",\n            \"type\": \"text\",\n            \"value\": \"\"\n        },\n        { \n            \"fred-import\": \"cta\"\n        },\n        { \n             \"fred-import\": \"text_color\"\n        }\n    ]\n\n}",
            "title": "Complete Option Set"
        },
        {
            "location": "/develop/option_sets/#cta-option-set",
            "text": "{\n    \"group\": \"CTA\",\n    \"settings\": [\n        {\n            \"name\": \"cta_class\",\n            \"label\": \"CTA Class\",\n            \"type\": \"select\",\n            \"options\": {\n                \"danger\": \"Red CTA\",\n                \"info\": \"Blue CTA\",\n                \"default\": \"Default CTA\"\n            },\n            \"value\": \"default\"\n        },\n        {\n            \"name\": \"show_cta\",\n            \"label\": \"Show CTA\",\n            \"type\": \"toggle\",\n            \"value\": false\n        }\n    ]\n}",
            "title": "CTA Option Set"
        },
        {
            "location": "/develop/option_sets/#text-color-option-set",
            "text": "{\n    \"name\": \"color\",\n    \"label\": \"Text Color\",\n    \"type\": \"colorswatch\",\n    \"value\": \"black\",\n    \"options\": [{\"value\":\"primary\", \"color\":\"blue\",\"label\":\"Primary\"}, \"lightcoral\", \"black\", \"rgba(0,255,0,.5)\"]\n}",
            "title": "Text Color Option Set"
        },
        {
            "location": "/develop/rte_configs/",
            "text": "",
            "title": "Home"
        },
        {
            "location": "/develop/system_settings/",
            "text": "Fred system settings control how your site reacts. Since Fred is loaded on the frontend, you can change how these works per-context, user, or group.\n\n\nDefault Element (fred.default_element)\n\n\nThe default element settings allows you to chose a default Fred element and target area for placing the content on existing documents. The setting is formatted as \nID|target\n where ID is the identification number of the Chunk and the target is the HTML element within that Chunk identified with a \ndata-fred-name\n attribute.\n\n\nExample Chunk: Content Area (13)\n\n\n<section class=\"container\">\n    <div contenteditable=\"true\" data-fred-name=\"content\" data-fred-rte=\"true\">\n    </div>\n</section>\n\n\n\n\nYou would set the value to be \n13|content\n\n\nElement's Group Sort (fred.element_group_sort)\n\n\nBy default element categories are sorted by \nname\n, but you can switch it to use the \nrank\n if you want them to be sorted in a specific order.\n\n\nBlueprint Sort (fred.blueprint_sort)\n\n\nBy default blueprints are sorted by \nname\n, but you can switch it to use the \nrank\n if you want them to be sorted in a specific order.\n\n\nBlueprint's Category Sort (fred.blueprint_category_sort)\n\n\nBy default blueprint categories are sorted by \nname\n, but you can switch it to use the \nrank\n if you want them to be sorted in a specific order.\n\n\nIcon Editor (fred.icon_editor)\n\n\nFred can use plugins that tap into different element types. The Icon Editor targets \n<i>\n elements that also have a \ndata-fred-name\n attribute.\n\n\nImage Editor (fred.image_editor)\n\n\nFred can use plugins that tap into different element types. The Image Editor targets \n<img>\n elements that also have a \ndata-fred-name\n attribute.\n\n\nPosition of Launcher (fred.launcher_position)\n\n\nThe Fred launcher can be positioned in any corner of the site to prevent hiding an element on your design. Options include: \nbottom_left\n, \nbottom\n, \nbottom_right\n, \ntop_left\n, \ntop\n, and \ntop_right\n.\n\n\nRich Text Editor (fred.rte)\n\n\nFred can use plugins that tap into different element types. The Image Editor targets any wrapper elements that also have a \ndata-fred-name\n attribute and are set to \ncontenteditable=\"true\" data-fred-rte=\"true\"\n.",
            "title": "Home"
        },
        {
            "location": "/develop/system_settings/#default-element-freddefault_element",
            "text": "The default element settings allows you to chose a default Fred element and target area for placing the content on existing documents. The setting is formatted as  ID|target  where ID is the identification number of the Chunk and the target is the HTML element within that Chunk identified with a  data-fred-name  attribute.",
            "title": "Default Element (fred.default_element)"
        },
        {
            "location": "/develop/system_settings/#example-chunk-content-area-13",
            "text": "<section class=\"container\">\n    <div contenteditable=\"true\" data-fred-name=\"content\" data-fred-rte=\"true\">\n    </div>\n</section>  You would set the value to be  13|content",
            "title": "Example Chunk: Content Area (13)"
        },
        {
            "location": "/develop/system_settings/#elements-group-sort-fredelement_group_sort",
            "text": "By default element categories are sorted by  name , but you can switch it to use the  rank  if you want them to be sorted in a specific order.",
            "title": "Element's Group Sort (fred.element_group_sort)"
        },
        {
            "location": "/develop/system_settings/#blueprint-sort-fredblueprint_sort",
            "text": "By default blueprints are sorted by  name , but you can switch it to use the  rank  if you want them to be sorted in a specific order.",
            "title": "Blueprint Sort (fred.blueprint_sort)"
        },
        {
            "location": "/develop/system_settings/#blueprints-category-sort-fredblueprint_category_sort",
            "text": "By default blueprint categories are sorted by  name , but you can switch it to use the  rank  if you want them to be sorted in a specific order.",
            "title": "Blueprint's Category Sort (fred.blueprint_category_sort)"
        },
        {
            "location": "/develop/system_settings/#icon-editor-fredicon_editor",
            "text": "Fred can use plugins that tap into different element types. The Icon Editor targets  <i>  elements that also have a  data-fred-name  attribute.",
            "title": "Icon Editor (fred.icon_editor)"
        },
        {
            "location": "/develop/system_settings/#image-editor-fredimage_editor",
            "text": "Fred can use plugins that tap into different element types. The Image Editor targets  <img>  elements that also have a  data-fred-name  attribute.",
            "title": "Image Editor (fred.image_editor)"
        },
        {
            "location": "/develop/system_settings/#position-of-launcher-fredlauncher_position",
            "text": "The Fred launcher can be positioned in any corner of the site to prevent hiding an element on your design. Options include:  bottom_left ,  bottom ,  bottom_right ,  top_left ,  top , and  top_right .",
            "title": "Position of Launcher (fred.launcher_position)"
        },
        {
            "location": "/develop/system_settings/#rich-text-editor-fredrte",
            "text": "Fred can use plugins that tap into different element types. The Image Editor targets any wrapper elements that also have a  data-fred-name  attribute and are set to  contenteditable=\"true\" data-fred-rte=\"true\" .",
            "title": "Rich Text Editor (fred.rte)"
        },
        {
            "location": "/elements/attributes/",
            "text": "Currently available attributes for Fred elements.\n\n\ncontenteditable\n\n\nIf set to \ntrue\n the content of the HTML element will be editable for the user, including all children.\nThis attribute has to be used with \ndata-fred-name\n to save the value.\n\n\nExample\n\n\n<p contenteditable=\"true\" data-fred-name=\"description\">Default value</p>\n\n\n\n\ndata-fred-name\n\n\nName for the editable HTML element. Only elements with this attribute will be saved.\nValue of this attribute has to be unique across a single Element, but you can have multiple instances of an Element on pages.\n\n\nExample\n\n\n<!-- Simple editable paragraph -->\n<p contenteditable=\"true\" data-fred-name=\"description\">Default value</p>\n\n<!-- Editable image -->\n<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\">\n\n\n\n\ndata-fred-attrs\n\n\nDefines other HTML attributes (comma separated) to save with the content of the HTML element. \n\n\nExample\n\n\n<img src=\"http://via.placeholder.com/450x150\" alt=\"Default Alt\" data-fred-name=\"header-image\" data-fred-attrs=\"alt\">\n\n\n\n\ndata-fred-render\n\n\nIf set to \nfalse\n HTML element won't appear when Fred is not loaded. This allows developers to create user-friendly, self-documenting Elements that inform users what they need to do in order to create content.\n\n\nExample\n\n\n<p data-fred-render=\"false\">Add a *Link Location* setting for this Element to make the button appear. (This will be visible only when Fred is used to create content.)</p>\n\n\n\n\ndata-fred-target\n\n\nDefines Resource field to store content. Content of the HTML element will be stored in regular Content field and additionally in the specified target. This attribute can't be used on a dropzone. \n\n\nAvailable targets:\n\n\n\n\npagetitle\n\n\nlongtitle\n\n\ndescription\n\n\nintrotext\n\n\nmenutitle\n\n\nalias\n\n\n\n\nExample\n\n\n<h1 data-fred-name=\"title\" data-fred-target=\"pagetitle\" contenteditable=\"true\">Default Page Title</h1>\n\n\n\n\ndata-fred-rte\n\n\nIf set to \ntrue\n the Rich Text Editor will be loaded for the editable HTML element.\n\n\nExample\n\n\n<div data-fred-name=\"rte-content\" contenteditable=\"true\" data-fred-rte=\"true\">Default Content</div>\n\n\n\n\ndata-fred-rte-config\n\n\nSpecify RTE config that should be used for the element.\n\n\nExample\n\n\n<div data-fred-name=\"rte-content\" contenteditable=\"true\" data-fred-rte=\"true\" data-fred-rte-config=\"simple\">Default Content</div>\n\n\n\n\ndata-fred-dropzone\n\n\nDefines a new Drop Zone for Fred Elements. This attribute cannot be empty and has to be unique across a single Element. You can create an unlimited number of Dropzones, though more than a few might get quite cumbersome. This is useful for creating alternate layouts like full width, split pages, sidebar pages, etc.\n\n\nExample\n\n\n<div data-fred-dropzone=\"left\" class=\"left-content\"></div>\n<div data-fred-dropzone=\"right\" class=\"right-content\"></div>\n\n\n\n\ndata-fred-link-type\n\n\nSets a type for a link, used for processing before generating content. Available values: \npage\n\nUsed together with other \ndata-fred-link-\n attributes.\n\n\nExample\n\n\n<a href=\"fred.html\" data-fred-link-type=\"page\" data-fred-link-page=\"2\">Fred</a>\n\n\n\n\ndata-fred-link-page\n\n\nDefines ID of MODX Resource. Value of this attribute will be used as a link's href (in MODX format \n[[~ID]]\n) when content is generated.\n\n\nExample\n\n\n<a href=\"fred.html\" data-fred-link-type=\"page\" data-fred-link-page=\"2\">Fred</a>\n\n\n\n\ndata-fred-media-source\n\n\nThis option override globals from Element Settings.\n\n\nDefines Media Source to be used for the element. Name of the media source is expected and can accommodate multiple Names separated by comma \n,\n.\n\n\nExample\n\n\n<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\" data-fred-media-source=\"Assets,Images\">\n\n\n\n\ndata-fred-image-media-source\n\n\nThis option override globals from Element Settings and \ndata-fred-media-source\n (but only for images).\n\n\nDefines Media Source to be used for the element. Name of the media source is expected and can accommodate multiple Names separated by comma \n,\n.\n\n\nExample\n\n\n<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\" data-fred-image-media-source=\"Assets,Images\">\n\n\n\n\ndata-fred-block-class\n\n\nWhen Fred is loaded, value of this attribute will be appended to class of \ndiv.fred--block\n (which is wrapping the whole element). When Fred is not loaded, attribute will be added to class of itself. \n\n\nExample\n\n\n<div class=\"image\" data-fred-block-class=\"wrapper\"></div>\n\n\n\n\ndata-fred-class\n\n\nWhen Fred is loaded, value of this attribute will be added to the own class.\n\n\nExample\n\n\n<div class=\"row\" data-fred-class=\"visible-grid\"></div>\n\n\n\n\ndata-fred-bind\n\n\nValue of the element will copy from other element.\n\n\nExample\n\n\n<div contenteditable=\"true\" data-fred-name=\"name\">John Doe</div>\n<div class=\"modal\">\n    <div class=\"modal-header\" data-fred-bind=\"name\"></div>\n    <div class=\"modal-content\">Hello there</div>\n</div>\n\n\n\n\ndata-fred-on-drop\n\n\nName of the globally accessible function that should be called when this element is dropped to any dropzone. The function will receive fredEl as a first attribute.\n\n\nExample\n\n\n<div class=\"clock\" data-fred-on-drop=\"initClock\">\n\n\n\n\ndata-fred-on-setting-change\n\n\nName of the globally accessible function that should be called when element setting changes. The function will receive fredEl as first attribute.\n\n\nExample\n\n\n<div class=\"clock\" data-fred-on-setting-change=\"reInitClock\"></div>",
            "title": "Attributes"
        },
        {
            "location": "/elements/attributes/#contenteditable",
            "text": "If set to  true  the content of the HTML element will be editable for the user, including all children.\nThis attribute has to be used with  data-fred-name  to save the value.",
            "title": "contenteditable"
        },
        {
            "location": "/elements/attributes/#example",
            "text": "<p contenteditable=\"true\" data-fred-name=\"description\">Default value</p>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-name",
            "text": "Name for the editable HTML element. Only elements with this attribute will be saved.\nValue of this attribute has to be unique across a single Element, but you can have multiple instances of an Element on pages.",
            "title": "data-fred-name"
        },
        {
            "location": "/elements/attributes/#example_1",
            "text": "<!-- Simple editable paragraph -->\n<p contenteditable=\"true\" data-fred-name=\"description\">Default value</p>\n\n<!-- Editable image -->\n<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\">",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-attrs",
            "text": "Defines other HTML attributes (comma separated) to save with the content of the HTML element.",
            "title": "data-fred-attrs"
        },
        {
            "location": "/elements/attributes/#example_2",
            "text": "<img src=\"http://via.placeholder.com/450x150\" alt=\"Default Alt\" data-fred-name=\"header-image\" data-fred-attrs=\"alt\">",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-render",
            "text": "If set to  false  HTML element won't appear when Fred is not loaded. This allows developers to create user-friendly, self-documenting Elements that inform users what they need to do in order to create content.",
            "title": "data-fred-render"
        },
        {
            "location": "/elements/attributes/#example_3",
            "text": "<p data-fred-render=\"false\">Add a *Link Location* setting for this Element to make the button appear. (This will be visible only when Fred is used to create content.)</p>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-target",
            "text": "Defines Resource field to store content. Content of the HTML element will be stored in regular Content field and additionally in the specified target. This attribute can't be used on a dropzone.   Available targets:   pagetitle  longtitle  description  introtext  menutitle  alias",
            "title": "data-fred-target"
        },
        {
            "location": "/elements/attributes/#example_4",
            "text": "<h1 data-fred-name=\"title\" data-fred-target=\"pagetitle\" contenteditable=\"true\">Default Page Title</h1>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-rte",
            "text": "If set to  true  the Rich Text Editor will be loaded for the editable HTML element.",
            "title": "data-fred-rte"
        },
        {
            "location": "/elements/attributes/#example_5",
            "text": "<div data-fred-name=\"rte-content\" contenteditable=\"true\" data-fred-rte=\"true\">Default Content</div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-rte-config",
            "text": "Specify RTE config that should be used for the element.",
            "title": "data-fred-rte-config"
        },
        {
            "location": "/elements/attributes/#example_6",
            "text": "<div data-fred-name=\"rte-content\" contenteditable=\"true\" data-fred-rte=\"true\" data-fred-rte-config=\"simple\">Default Content</div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-dropzone",
            "text": "Defines a new Drop Zone for Fred Elements. This attribute cannot be empty and has to be unique across a single Element. You can create an unlimited number of Dropzones, though more than a few might get quite cumbersome. This is useful for creating alternate layouts like full width, split pages, sidebar pages, etc.",
            "title": "data-fred-dropzone"
        },
        {
            "location": "/elements/attributes/#example_7",
            "text": "<div data-fred-dropzone=\"left\" class=\"left-content\"></div>\n<div data-fred-dropzone=\"right\" class=\"right-content\"></div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-link-type",
            "text": "Sets a type for a link, used for processing before generating content. Available values:  page \nUsed together with other  data-fred-link-  attributes.",
            "title": "data-fred-link-type"
        },
        {
            "location": "/elements/attributes/#example_8",
            "text": "<a href=\"fred.html\" data-fred-link-type=\"page\" data-fred-link-page=\"2\">Fred</a>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-link-page",
            "text": "Defines ID of MODX Resource. Value of this attribute will be used as a link's href (in MODX format  [[~ID]] ) when content is generated.",
            "title": "data-fred-link-page"
        },
        {
            "location": "/elements/attributes/#example_9",
            "text": "<a href=\"fred.html\" data-fred-link-type=\"page\" data-fred-link-page=\"2\">Fred</a>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-media-source",
            "text": "This option override globals from Element Settings.  Defines Media Source to be used for the element. Name of the media source is expected and can accommodate multiple Names separated by comma  , .",
            "title": "data-fred-media-source"
        },
        {
            "location": "/elements/attributes/#example_10",
            "text": "<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\" data-fred-media-source=\"Assets,Images\">",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-image-media-source",
            "text": "This option override globals from Element Settings and  data-fred-media-source  (but only for images).  Defines Media Source to be used for the element. Name of the media source is expected and can accommodate multiple Names separated by comma  , .",
            "title": "data-fred-image-media-source"
        },
        {
            "location": "/elements/attributes/#example_11",
            "text": "<img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header-image\" data-fred-image-media-source=\"Assets,Images\">",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-block-class",
            "text": "When Fred is loaded, value of this attribute will be appended to class of  div.fred--block  (which is wrapping the whole element). When Fred is not loaded, attribute will be added to class of itself.",
            "title": "data-fred-block-class"
        },
        {
            "location": "/elements/attributes/#example_12",
            "text": "<div class=\"image\" data-fred-block-class=\"wrapper\"></div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-class",
            "text": "When Fred is loaded, value of this attribute will be added to the own class.",
            "title": "data-fred-class"
        },
        {
            "location": "/elements/attributes/#example_13",
            "text": "<div class=\"row\" data-fred-class=\"visible-grid\"></div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-bind",
            "text": "Value of the element will copy from other element.",
            "title": "data-fred-bind"
        },
        {
            "location": "/elements/attributes/#example_14",
            "text": "<div contenteditable=\"true\" data-fred-name=\"name\">John Doe</div>\n<div class=\"modal\">\n    <div class=\"modal-header\" data-fred-bind=\"name\"></div>\n    <div class=\"modal-content\">Hello there</div>\n</div>",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-on-drop",
            "text": "Name of the globally accessible function that should be called when this element is dropped to any dropzone. The function will receive fredEl as a first attribute.",
            "title": "data-fred-on-drop"
        },
        {
            "location": "/elements/attributes/#example_15",
            "text": "<div class=\"clock\" data-fred-on-drop=\"initClock\">",
            "title": "Example"
        },
        {
            "location": "/elements/attributes/#data-fred-on-setting-change",
            "text": "Name of the globally accessible function that should be called when element setting changes. The function will receive fredEl as first attribute.",
            "title": "data-fred-on-setting-change"
        },
        {
            "location": "/elements/attributes/#example_16",
            "text": "<div class=\"clock\" data-fred-on-setting-change=\"reInitClock\"></div>",
            "title": "Example"
        },
        {
            "location": "/elements/",
            "text": "Elements\n\n\nElements are the various design patterns used in a theme. Elements typically include HTML markup and can be configured by using Settings for the Element accessed via the gear icon. Elements can also include logic by using Twig in the markup to do things like show or hide certain things depending on the conditions you set.",
            "title": "Elements"
        },
        {
            "location": "/elements/#elements",
            "text": "Elements are the various design patterns used in a theme. Elements typically include HTML markup and can be configured by using Settings for the Element accessed via the gear icon. Elements can also include logic by using Twig in the markup to do things like show or hide certain things depending on the conditions you set.",
            "title": "Elements"
        },
        {
            "location": "/elements/markup/",
            "text": "Fred elements are crafted in pure HTML with specific attributes. The markup can be enhanced using Twig and Element Settings.\n\n\nMarkup Example\n\n\n<!-- Simple Element -->\n<div class=\"panel\">\n    <p contenteditable=\"true\" data-fred-name=\"header_text\">Default Value</p>\n    <img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header_image\">\n</div>\n\n<!-- Enhanced Element -->\n<div class=\"panel {{ panel_class }}\">\n    <p contenteditable=\"true\" data-fred-name=\"panel_text\">Default Value</p>\n\n    {% if cta_link %}\n    <a class=\"btn {{ cta_class }}\" href=\"{{ cta_link }}\">{{ cta_text }}</a>\n    {% endif %}\n</div>",
            "title": "Markup"
        },
        {
            "location": "/elements/markup/#markup-example",
            "text": "<!-- Simple Element -->\n<div class=\"panel\">\n    <p contenteditable=\"true\" data-fred-name=\"header_text\">Default Value</p>\n    <img src=\"http://via.placeholder.com/450x150\" data-fred-name=\"header_image\">\n</div>\n\n<!-- Enhanced Element -->\n<div class=\"panel {{ panel_class }}\">\n    <p contenteditable=\"true\" data-fred-name=\"panel_text\">Default Value</p>\n\n    {% if cta_link %}\n    <a class=\"btn {{ cta_class }}\" href=\"{{ cta_link }}\">{{ cta_text }}</a>\n    {% endif %}\n</div>",
            "title": "Markup Example"
        },
        {
            "location": "/elements/options/",
            "text": "Options are defined through an attached \nOption Set\n, or option override when creating/updating Element. Same \noptions\n as in Option Set can be used as an override.",
            "title": "Options"
        }
    ]
}